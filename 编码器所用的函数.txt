File /mnt/f/EI_For_Compare/build/linux/app/TAppEncoder/../../../../source/App/TAppEncoder/TAppEncCfg.cpp:
65:     void TAppEncCfg::TAppEncCfg();
106:    void TAppEncCfg::create();
110:    void TAppEncCfg::destroy();
239:    Bool TAppEncCfg::parseCfg(int, char**);
817:    void TAppEncCfg::xCheckParameter();
1418:   void TAppEncCfg::xPrintParameter();
1396:   void TAppEncCfg::xSetGlobal();
78:     void TAppEncCfg::~TAppEncCfg();
1530:   Bool confirmPara(bool, char const*);
114:    std::istringstream &operator>>(std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >&, GOPEntry&);
        static void _GLOBAL__sub_I_TAppEncCfg.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);
226:    static std::istream &operator>>(std::istream&, Level::Name&);
221:    static std::istream &operator>>(std::istream&, Level::Tier&);
216:    static std::istream &operator>>(std::istream&, Profile::Name&);
197:    static std::istream &readStrToEnum<Level::Name, MapStrToLevel const>(MapStrToLevel const*, unsigned long, std::istream&, Level::Name&);
197:    static std::istream &readStrToEnum<Level::Tier, MapStrToTier const>(MapStrToTier const*, unsigned long, std::istream&, Level::Tier&);
197:    static std::istream &readStrToEnum<Profile::Name, MapStrToProfile const>(MapStrToProfile const*, unsigned long, std::istream&, Profile::Name&);

File /mnt/f/EI_For_Compare/build/linux/app/TAppEncoder/../../../../source/App/TAppEncoder/TAppEncTop.cpp:
57:     void TAppEncTop::TAppEncTop();
363:    void TAppEncTop::encode();
602:    void TAppEncTop::printRateSummary();
564:    void TAppEncTop::rateStatsAccum(AccessUnit const&, std::vector<unsigned int, std::allocator<unsigned int> > const&);
323:    void TAppEncTop::xCreateLib();
485:    void TAppEncTop::xDeleteBuffer();
336:    void TAppEncTop::xDestroyLib();
465:    void TAppEncTop::xGetBuffer(TComPicYuv*&);
346:    void TAppEncTop::xInitLib(bool);
68:     void TAppEncTop::xInitLibCfg();
502:    void TAppEncTop::xWriteOutput(std::ostream&, int, std::list<AccessUnit, std::allocator<AccessUnit> > const&);
64:     void TAppEncTop::~TAppEncTop();
        static void _GLOBAL__sub_I_TAppEncTop.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/app/TAppEncoder/../../../../source/App/TAppEncoder/encmain.cpp:
53:     int main(int, char**);
        static void _GLOBAL__sub_I_encmain.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/app/TAppEncoder/../../../../source/Lib/TAppCommon/program_options_lite.h:
97:     void df::program_options_lite::Option<GOPEntry>::Option(std::string const&, GOPEntry&, GOPEntry, std::string const&);
115:    void df::program_options_lite::Option<GOPEntry>::parse(std::string const&);
103:    void df::program_options_lite::Option<GOPEntry>::setDefault();
95:     void df::program_options_lite::Option<GOPEntry>::~Option();
97:     void df::program_options_lite::Option<Level::Name>::Option(std::string const&, Level::Name&, Level::Name, std::string const&);
115:    void df::program_options_lite::Option<Level::Name>::parse(std::string const&);
103:    void df::program_options_lite::Option<Level::Name>::setDefault();
95:     void df::program_options_lite::Option<Level::Name>::~Option();
97:     void df::program_options_lite::Option<Level::Tier>::Option(std::string const&, Level::Tier&, Level::Tier, std::string const&);
115:    void df::program_options_lite::Option<Level::Tier>::parse(std::string const&);
103:    void df::program_options_lite::Option<Level::Tier>::setDefault();
95:     void df::program_options_lite::Option<Level::Tier>::~Option();
97:     void df::program_options_lite::Option<Profile::Name>::Option(std::string const&, Profile::Name&, Profile::Name, std::string const&);
115:    void df::program_options_lite::Option<Profile::Name>::parse(std::string const&);
103:    void df::program_options_lite::Option<Profile::Name>::setDefault();
95:     void df::program_options_lite::Option<Profile::Name>::~Option();
97:     void df::program_options_lite::Option<bool>::Option(std::string const&, bool&, bool, std::string const&);
115:    void df::program_options_lite::Option<bool>::parse(std::string const&);
103:    void df::program_options_lite::Option<bool>::setDefault();
95:     void df::program_options_lite::Option<bool>::~Option();
97:     void df::program_options_lite::Option<double>::Option(std::string const&, double&, double, std::string const&);
115:    void df::program_options_lite::Option<double>::parse(std::string const&);
103:    void df::program_options_lite::Option<double>::setDefault();
95:     void df::program_options_lite::Option<double>::~Option();
97:     void df::program_options_lite::Option<int>::Option(std::string const&, int&, int, std::string const&);
115:    void df::program_options_lite::Option<int>::parse(std::string const&);
103:    void df::program_options_lite::Option<int>::setDefault();
95:     void df::program_options_lite::Option<int>::~Option();
97:     void df::program_options_lite::Option<std::string>::Option(std::string const&, std::string&, std::string, std::string const&);
133:    void df::program_options_lite::Option<std::string>::parse(std::string const&);
103:    void df::program_options_lite::Option<std::string>::setDefault();
95:     void df::program_options_lite::Option<std::string>::~Option();
97:     void df::program_options_lite::Option<unsigned int>::Option(std::string const&, unsigned int&, unsigned int, std::string const&);
115:    void df::program_options_lite::Option<unsigned int>::parse(std::string const&);
103:    void df::program_options_lite::Option<unsigned int>::setDefault();
95:     void df::program_options_lite::Option<unsigned int>::~Option();
78:     void df::program_options_lite::OptionBase::OptionBase(std::string const&, std::string const&);
82:     void df::program_options_lite::OptionBase::~OptionBase();
143:    void df::program_options_lite::OptionFunc::OptionFunc(std::string const&, df::program_options_lite::Options&, void (*)(df::program_options_lite::Options&, std::string const&), std::string const&);
147:    void df::program_options_lite::OptionFunc::parse(std::string const&);
152:    void df::program_options_lite::OptionFunc::setDefault();
139:    void df::program_options_lite::OptionFunc::~OptionFunc();
220:    df::program_options_lite::OptionSpecific &df::program_options_lite::OptionSpecific::operator()(std::string const&, void (*)(df::program_options_lite::Options&, std::string const&), std::string const&);
206:    df::program_options_lite::OptionSpecific &df::program_options_lite::OptionSpecific::operator()<GOPEntry>(std::string const&, GOPEntry&, GOPEntry, std::string const&);
206:    df::program_options_lite::OptionSpecific &df::program_options_lite::OptionSpecific::operator()<Level::Name>(std::string const&, Level::Name&, Level::Name, std::string const&);
206:    df::program_options_lite::OptionSpecific &df::program_options_lite::OptionSpecific::operator()<Level::Tier>(std::string const&, Level::Tier&, Level::Tier, std::string const&);
206:    df::program_options_lite::OptionSpecific &df::program_options_lite::OptionSpecific::operator()<Profile::Name>(std::string const&, Profile::Name&, Profile::Name, std::string const&);
206:    df::program_options_lite::OptionSpecific &df::program_options_lite::OptionSpecific::operator()<bool>(std::string const&, bool&, bool, std::string const&);
206:    df::program_options_lite::OptionSpecific &df::program_options_lite::OptionSpecific::operator()<double>(std::string const&, double&, double, std::string const&);
206:    df::program_options_lite::OptionSpecific &df::program_options_lite::OptionSpecific::operator()<int>(std::string const&, int&, int, std::string const&);
206:    df::program_options_lite::OptionSpecific &df::program_options_lite::OptionSpecific::operator()<std::string>(std::string const&, std::string&, std::string, std::string const&);
206:    df::program_options_lite::OptionSpecific &df::program_options_lite::OptionSpecific::operator()<unsigned int>(std::string const&, unsigned int&, unsigned int, std::string const&);
163:    void df::program_options_lite::Options::Options();
51:     void df::program_options_lite::ParseFailure::ParseFailure(std::string, std::string);
60:     const char *df::program_options_lite::ParseFailure::what() const;
55:     void df::program_options_lite::ParseFailure::~ParseFailure();

File /mnt/f/EI_For_Compare/build/linux/app/TAppEncoder/../../../../source/Lib/TLibCommon/AccessUnit.h:
62:     void AccessUnit::~AccessUnit();

File /mnt/f/EI_For_Compare/build/linux/app/TAppEncoder/../../../../source/Lib/TLibCommon/NAL.h:
101:    void NALUnitEBSP::~NALUnitEBSP();

File /mnt/f/EI_For_Compare/build/linux/app/TAppEncoder/../../../../source/Lib/TLibCommon/TComList.h:
61:     void TComList<TComPicYuv*>::TComList();
82:     TComPicYuv *TComList<TComPicYuv*>::popFront();
89:     void TComList<TComPicYuv*>::pushBack(TComPicYuv* const&);
61:     void TComList<TComPicYuv*>::~TComList();

File /mnt/f/EI_For_Compare/build/linux/app/TAppEncoder/../../../../source/Lib/TLibCommon/TComSlice.h:
760:    Int TComSPS::getWinUnitX(int);
761:    Int TComSPS::getWinUnitY(int);
395:    TComVPS &TComVPS::operator=(TComVPS const&);
450:    void TComVPS::setMaxDecPicBuffering(unsigned int, unsigned int);
442:    void TComVPS::setMaxLayers(unsigned int);
439:    void TComVPS::setMaxTLayers(unsigned int);
447:    void TComVPS::setNumReorderPics(unsigned int, unsigned int);
445:    void TComVPS::setTemporalNestingFlag(bool);
499:    void Window::setWindow(int, int, int, int);

File /mnt/f/EI_For_Compare/build/linux/app/TAppEncoder/../../../../source/Lib/TLibEncoder/AnnexBwrite.h:
50:     static std::vector<unsigned int, std::allocator<unsigned int> > writeAnnexB(std::ostream&, AccessUnit const&);

File /mnt/f/EI_For_Compare/build/linux/app/TAppEncoder/../../../../source/Lib/TLibEncoder/TEncCfg.h:
71:     void GOPEntry::GOPEntry();
639:    void TEncCfg::setActiveParameterSetsSEIEnabled(int);
646:    void TEncCfg::setAspectRatioIdc(int);
644:    void TEncCfg::setAspectRatioInfoPresentFlag(bool);
374:    void TEncCfg::setBipredSearchRange(int);
686:    void TEncCfg::setBitstreamRestrictionFlag(bool);
515:    void TEncCfg::setBufferingPeriodSEIEnabled(int);
630:    void TEncCfg::setCUTransquantBypassFlagForceValue(bool);
380:    void TEncCfg::setChromaCbQpOffset(int);
381:    void TEncCfg::setChromaCrQpOffset(int);
670:    void TEncCfg::setChromaLocInfoPresentFlag(bool);
674:    void TEncCfg::setChromaSampleLocTypeBottomField(int);
672:    void TEncCfg::setChromaSampleLocTypeTopField(int);
662:    void TEncCfg::setColourDescriptionPresentFlag(bool);
664:    void TEncCfg::setColourPrimaries(int);
502:    void TEncCfg::setColumnWidth(std::vector<int, std::allocator<int> > const&);
332:    void TEncCfg::setConformanceWindow(int, int, int, int);
368:    void TEncCfg::setDeblockingFilterControlPresent(bool);
369:    void TEncCfg::setDeblockingFilterMetric(bool);
513:    void TEncCfg::setDecodedPictureHashSEIEnabled(int);
338:    void TEncCfg::setDecodingRefreshType(int);
591:    void TEncCfg::setDecodingUnitInfoSEIEnabled(int);
678:    void TEncCfg::setDefaultDisplayWindow(int, int, int, int);
452:    void TEncCfg::setDeltaQpRD(unsigned int);
585:    void TEncCfg::setDisplayOrientationSEIAngle(int);
341:    void TEncCfg::setExtraRPSs(int);
372:    void TEncCfg::setFastSearch(int);
626:    void TEncCfg::setForceIntraQP(bool);
680:    void TEncCfg::setFrameFieldInfoPresentFlag(bool);
712:    void TEncCfg::setFrameOnlyConstraintFlag(bool);
575:    void TEncCfg::setFramePackingArrangementSEIEnabled(int);
579:    void TEncCfg::setFramePackingArrangementSEIId(int);
583:    void TEncCfg::setFramePackingArrangementSEIInterpretation(int);
581:    void TEncCfg::setFramePackingArrangementSEIQuincunx(int);
577:    void TEncCfg::setFramePackingArrangementSEIType(int);
326:    void TEncCfg::setFrameRate(int);
327:    void TEncCfg::setFrameSkip(unsigned int);
334:    void TEncCfg::setFramesToBeEncoded(int);
339:    void TEncCfg::setGOPSize(int);
340:    void TEncCfg::setGopList(GOPEntry*);
589:    void TEncCfg::setGradualDecodingRefreshInfoEnabled(int);
624:    void TEncCfg::setInitialQP(int);
706:    void TEncCfg::setInterlacedSourceFlag(bool);
337:    void TEncCfg::setIntraPeriod(int);
618:    void TEncCfg::setKeepHierBit(int);
620:    void TEncCfg::setLCULevelRC(bool);
487:    void TEncCfg::setLFCrossSliceBoundaryFlag(bool);
496:    void TEncCfg::setLFCrossTileBoundaryFlag(bool);
397:    void TEncCfg::setLambdaModifier(unsigned int, double);
324:    void TEncCfg::setLevel(Level::Tier, Level::Name);
698:    void TEncCfg::setLog2MaxMvLengthHorizontal(int);
700:    void TEncCfg::setLog2MaxMvLengthVertical(int);
601:    void TEncCfg::setLog2ParallelMergeLevelMinus2(unsigned int);
366:    void TEncCfg::setLoopFilterBetaOffset(int);
364:    void TEncCfg::setLoopFilterDisable(bool);
365:    void TEncCfg::setLoopFilterOffsetInPPS(bool);
367:    void TEncCfg::setLoopFilterTcOffset(int);
668:    void TEncCfg::setMatrixCoefficients(int);
696:    void TEncCfg::setMaxBitsPerMinCuDenom(int);
694:    void TEncCfg::setMaxBytesPerPicDenom(int);
378:    void TEncCfg::setMaxCuDQPDepth(int);
343:    void TEncCfg::setMaxDecPicBuffering(unsigned int, unsigned int);
377:    void TEncCfg::setMaxDeltaQP(int);
603:    void TEncCfg::setMaxNumMergeCand(unsigned int);
492:    void TEncCfg::setMaxNumOffsetsPerPic(int);
354:    void TEncCfg::setMaxTempLayer(int);
692:    void TEncCfg::setMinSpatialSegmentationIdc(int);
690:    void TEncCfg::setMotionVectorsOverPicBoundariesFlag(bool);
676:    void TEncCfg::setNeutralChromaIndicationFlag(bool);
709:    void TEncCfg::setNonPackedConstraintFlag(bool);
500:    void TEncCfg::setNumColumnsMinus1(int);
344:    void TEncCfg::setNumReorderPics(int, unsigned int);
504:    void TEncCfg::setNumRowsMinus1(int);
684:    void TEncCfg::setNumTicksPocDiffOneMinus1(int);
654:    void TEncCfg::setOverscanAppropriateFlag(bool);
652:    void TEncCfg::setOverscanInfoPresentFlag(bool);
447:    void TEncCfg::setPCMFilterDisableFlag(bool);
446:    void TEncCfg::setPCMInputBitDepthFlag(bool);
449:    void TEncCfg::setPCMLog2MaxSize(unsigned int);
450:    void TEncCfg::setPCMLog2MinSize(unsigned int);
348:    void TEncCfg::setPad(int*);
517:    void TEncCfg::setPictureTimingSEIEnabled(int);
682:    void TEncCfg::setPocProportionalToTimingFlag(bool);
323:    void TEncCfg::setProfile(Profile::Name);
703:    void TEncCfg::setProgressiveSourceFlag(bool);
346:    void TEncCfg::setQP(int);
389:    void TEncCfg::setQPAdaptationRange(int);
356:    void TEncCfg::setQuadtreeTULog2MaxSize(unsigned int);
357:    void TEncCfg::setQuadtreeTULog2MinSize(unsigned int);
358:    void TEncCfg::setQuadtreeTUMaxDepthInter(unsigned int);
359:    void TEncCfg::setQuadtreeTUMaxDepthIntra(unsigned int);
439:    void TEncCfg::setRDpenalty(unsigned int);
519:    void TEncCfg::setRecoveryPointSEIEnabled(int);
506:    void TEncCfg::setRowHeight(std::vector<int, std::allocator<int> > const&);
593:    void TEncCfg::setSOPDescriptionSEIEnabled(int);
494:    void TEncCfg::setSaoLcuBoundary(bool);
650:    void TEncCfg::setSarHeight(int);
648:    void TEncCfg::setSarWidth(int);
595:    void TEncCfg::setScalableNestingSEIEnabled(int);
607:    void TEncCfg::setScalingListFile(char*);
373:    void TEncCfg::setSearchRange(int);
611:    void TEncCfg::setSignHideFlag(int);
479:    void TEncCfg::setSliceArgument(int);
478:    void TEncCfg::setSliceMode(int);
484:    void TEncCfg::setSliceSegmentArgument(int);
483:    void TEncCfg::setSliceSegmentMode(int);
329:    void TEncCfg::setSourceHeight(int);
328:    void TEncCfg::setSourceWidth(int);
551:    void TEncCfg::setTMISEICameraIsoSpeedIdc(int);
553:    void TEncCfg::setTMISEICameraIsoSpeedValue(int);
529:    void TEncCfg::setTMISEICodedDataBitDepth(int);
547:    void TEncCfg::setTMISEICodedPivotValue(int*);
563:    void TEncCfg::setTMISEIExposureCompensationValueDenomIdc(int);
561:    void TEncCfg::setTMISEIExposureCompensationValueNumerator(int);
559:    void TEncCfg::setTMISEIExposureCompensationValueSignFlag(int);
555:    void TEncCfg::setTMISEIExposureIndexIdc(int);
557:    void TEncCfg::setTMISEIExposureIndexValue(int);
567:    void TEncCfg::setTMISEIExtendedRangeWhiteLevel(int);
573:    void TEncCfg::setTMISEIExtendedWhiteLevelLumaCodeValue(int);
537:    void TEncCfg::setTMISEIMaxValue(int);
535:    void TEncCfg::setTMISEIMinValue(int);
533:    void TEncCfg::setTMISEIModelID(int);
569:    void TEncCfg::setTMISEINominalBlackLevelLumaCodeValue(int);
571:    void TEncCfg::setTMISEINominalWhiteLevelLumaCodeValue(int);
545:    void TEncCfg::setTMISEINumPivots(int);
565:    void TEncCfg::setTMISEIRefScreenLuminanceWhite(int);
539:    void TEncCfg::setTMISEISigmoidMidpoint(int);
541:    void TEncCfg::setTMISEISigmoidWidth(int);
543:    void TEncCfg::setTMISEIStartOfCodedInterva(int*);
531:    void TEncCfg::setTMISEITargetBitDepth(int);
549:    void TEncCfg::setTMISEITargetPivotValue(int*);
525:    void TEncCfg::setTMISEIToneMapCancelFlag(bool);
523:    void TEncCfg::setTMISEIToneMapId(int);
527:    void TEncCfg::setTMISEIToneMapPersistenceFlag(bool);
609:    void TEncCfg::setTMVPModeId(int);
616:    void TEncCfg::setTargetBitrate(int);
587:    void TEncCfg::setTemporalLevel0IndexSEIEnabled(int);
498:    void TEncCfg::setTileUniformSpacingFlag(bool);
688:    void TEncCfg::setTilesFixedStructureFlag(bool);
521:    void TEncCfg::setToneMappingInfoSEIEnabled(bool);
666:    void TEncCfg::setTransferCharacteristics(int);
628:    void TEncCfg::setTransquantBypassEnableFlag(bool);
361:    void TEncCfg::setUseAMP(bool);
435:    void TEncCfg::setUseASR(bool);
384:    void TEncCfg::setUseAdaptQpSelect(bool);
388:    void TEncCfg::setUseAdaptiveQP(bool);
443:    void TEncCfg::setUseCbfFastMode(bool);
445:    void TEncCfg::setUseConstrainedIntraPred(bool);
441:    void TEncCfg::setUseEarlyCU(bool);
444:    void TEncCfg::setUseEarlySkipDetection(bool);
442:    void TEncCfg::setUseFastDecisionForMerge(bool);
440:    void TEncCfg::setUseFastEnc(bool);
436:    void TEncCfg::setUseHADME(bool);
622:    void TEncCfg::setUseLCUSeparateModel(bool);
448:    void TEncCfg::setUsePCM(bool);
437:    void TEncCfg::setUseRDOQ(bool);
438:    void TEncCfg::setUseRDOQTS(bool);
614:    void TEncCfg::setUseRateCtrl(bool);
633:    void TEncCfg::setUseRecalculateQPAccordingToLambda(bool);
490:    void TEncCfg::setUseSAO(bool);
605:    void TEncCfg::setUseScalingListId(int);
636:    void TEncCfg::setUseStrongIntraSmoothing(bool);
471:    void TEncCfg::setUseTransformSkip(bool);
473:    void TEncCfg::setUseTransformSkipFast(bool);
597:    void TEncCfg::setUseWP(bool);
631:    void TEncCfg::setVPS(TComVPS*);
658:    void TEncCfg::setVideoFormat(int);
660:    void TEncCfg::setVideoFullRangeFlag(bool);
656:    void TEncCfg::setVideoSignalTypePresentFlag(bool);
642:    void TEncCfg::setVuiParametersPresentFlag(bool);
598:    void TEncCfg::setWPBiPred(bool);
511:    void TEncCfg::setWaveFrontSubstreams(int);
509:    void TEncCfg::setWaveFrontSynchro(int);
451:    void TEncCfg::setdQPs(int*);

File /mnt/f/EI_For_Compare/build/linux/app/TAppEncoder/../../../../source/Lib/TLibEncoder/TEncTop.h:
189:    void TEncTop::printSummary(bool);

File /mnt/f/EI_For_Compare/build/linux/app/TAppEncoder/../../../../source/Lib/TLibVideoIO/TVideoIOYuv.h:
64:     void TVideoIOYuv::TVideoIOYuv();
65:     void TVideoIOYuv::~TVideoIOYuv();

File /mnt/f/EI_For_Compare/build/linux/lib/TAppCommon/../../../../source/Lib/TAppCommon/program_options_lite.cpp:
61:     void df::program_options_lite::Options::addOption(df::program_options_lite::OptionBase*);
94:     df::program_options_lite::OptionSpecific df::program_options_lite::Options::addOptions();
53:     void df::program_options_lite::Options::~Options();
142:    void df::program_options_lite::doHelp(std::ostream&, df::program_options_lite::Options&, unsigned int);
484:    void df::program_options_lite::parseConfigFile(df::program_options_lite::Options&, std::string const&);
280:    unsigned int df::program_options_lite::parseGNU(df::program_options_lite::Options&, unsigned int, char const**);
319:    unsigned int df::program_options_lite::parseSHORT(df::program_options_lite::Options&, unsigned int, char const**);
343:    std::list<char const*, std::allocator<char const*> > df::program_options_lite::scanArgv(df::program_options_lite::Options&, unsigned int, char const**);
463:    void df::program_options_lite::scanFile(df::program_options_lite::Options&, std::istream&);
389:    void df::program_options_lite::scanLine(df::program_options_lite::Options&, std::string&);
476:    void df::program_options_lite::setDefaults(df::program_options_lite::Options&);
238:    bool df::program_options_lite::storePair(df::program_options_lite::Options&, bool, bool, std::string const&, std::string const&);
272:    bool df::program_options_lite::storePair(df::program_options_lite::Options&, std::string const&, std::string const&);
        static void _GLOBAL__sub_I_program_options_lite.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);
115:    static void df::program_options_lite::doHelpOpt(std::ostream&, df::program_options_lite::Options::Names const&, unsigned int);
99:     static void df::program_options_lite::setOptions(df::program_options_lite::Options::NamesPtrList&, std::string const&);

File /mnt/f/EI_For_Compare/build/linux/lib/TAppCommon/../../../../source/Lib/TAppCommon/program_options_lite.h:
196:    void df::program_options_lite::OptionSpecific::OptionSpecific(df::program_options_lite::Options&);
171:    void df::program_options_lite::Options::Names::Names();
172:    void df::program_options_lite::Options::Names::~Names();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/CommonDef.h:
134:    int Clip3<int>(int, int, int);
134:    short Clip3<short>(short, short, short);
131:    int ClipC<int>(int);
130:    int ClipY<int>(int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/ContextModel.cpp:
94:     void ContextModel::buildNextStateTable();
56:     void ContextModel::init(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/ContextModel.h:
59:     void ContextModel::ContextModel();
89:     UInt ContextModel::getBinsCoded();
78:     Int ContextModel::getEntropyBits(short);
63:     UChar ContextModel::getMps();
62:     UChar ContextModel::getState();
88:     void ContextModel::setBinsCoded(unsigned int);
60:     void ContextModel::~ContextModel();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/ContextModel3DBuffer.cpp:
47:     void ContextModel3DBuffer::ContextModel3DBuffer(unsigned int, unsigned int, unsigned int, ContextModel*, int&);
86:     UInt ContextModel3DBuffer::calcCost(SliceType, int, unsigned char*);
68:     void ContextModel3DBuffer::initBuffer(SliceType, int, unsigned char*);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/SEI.cpp:
79:     void deleteSEIs(std::list<SEI*, std::allocator<SEI*> >&);
58:     SEIMessages extractSeisByType(std::list<SEI*, std::allocator<SEI*> >&, SEI::PayloadType);
44:     SEIMessages getSeisByType(std::list<SEI*, std::allocator<SEI*> >&, SEI::PayloadType);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComBitStream.cpp:
64:     void TComInputBitstream::TComInputBitstream(std::vector<unsigned char, std::allocator<unsigned char> >*);
367:    void TComInputBitstream::deleteFifo();
344:    TComInputBitstream *TComInputBitstream::extractSubstream(unsigned int);
226:    void TComInputBitstream::pseudoRead(unsigned int, unsigned int&);
242:    void TComInputBitstream::read(unsigned int, unsigned int&);
373:    void TComInputBitstream::readByteAlignment();
317:    void TComInputBitstream::readOutTrailingBits();
73:     void TComInputBitstream::~TComInputBitstream();
53:     void TComOutputBitstream::TComOutputBitstream();
165:    void TComOutputBitstream::addSubstream(TComOutputBitstream*);
91:     void TComOutputBitstream::clear();
186:    Int TComOutputBitstream::countStartCodeEmulations();
81:     Char *TComOutputBitstream::getByteStream() const;
86:     UInt TComOutputBitstream::getByteStreamLength();
308:    void TComOutputBitstream::insertAt(TComOutputBitstream const&, unsigned int);
327:    TComOutputBitstream &TComOutputBitstream::operator=(TComOutputBitstream const&);
98:     void TComOutputBitstream::write(unsigned int, unsigned int);
142:    void TComOutputBitstream::writeAlignOne();
149:    void TComOutputBitstream::writeAlignZero();
180:    void TComOutputBitstream::writeByteAlignment();
59:     void TComOutputBitstream::~TComOutputBitstream();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComBitStream.h:
59:     void TComBitIf::TComBitIf();
62:     void TComBitIf::writeAlignOne();
63:     void TComBitIf::writeAlignZero();
67:     void TComBitIf::~TComBitIf();
213:    UInt TComInputBitstream::getNumBitsLeft();
212:    UInt TComInputBitstream::getNumBitsUntilByteAligned();
146:    std::vector<unsigned char, std::allocator<unsigned char> > &TComOutputBitstream::getFIFO();
148:    UChar TComOutputBitstream::getHeldBits();
134:    Int TComOutputBitstream::getNumBitsUntilByteAligned();
139:    UInt TComOutputBitstream::getNumberOfWrittenBits() const;
108:    void TComOutputBitstream::resetBits();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComDataCU.cpp:
55:     void TComDataCU::TComDataCU();
2985:   void TComDataCU::clearCbf(unsigned int, TextType, unsigned int);
2956:   void TComDataCU::clipMv(TComMv&);
3361:   void TComDataCU::compressMV();
840:    void TComDataCU::copyInterPredInfoFrom(TComDataCU*, unsigned int, RefPicList);
884:    void TComDataCU::copyPartFrom(TComDataCU*, unsigned int, unsigned int);
759:    void TComDataCU::copySubCU(TComDataCU*, unsigned int, unsigned int);
964:    void TComDataCU::copyToPic(unsigned char);
1034:   void TComDataCU::copyToPic(unsigned char, unsigned int, unsigned int);
120:    void TComDataCU::create(unsigned int, unsigned int, unsigned int, bool, int, bool);
2233:   void TComDataCU::deriveLeftBottomIdx(unsigned int, unsigned int&);
2317:   void TComDataCU::deriveLeftBottomIdxAdi(unsigned int&, unsigned int, unsigned int);
2146:   void TComDataCU::deriveLeftBottomIdxGeneral(unsigned int, unsigned int, unsigned int&);
2193:   void TComDataCU::deriveLeftRightTopIdx(unsigned int, unsigned int&, unsigned int&);
2310:   void TComDataCU::deriveLeftRightTopIdxAdi(unsigned int&, unsigned int&, unsigned int, unsigned int);
2097:   void TComDataCU::deriveLeftRightTopIdxGeneral(unsigned int, unsigned int, unsigned int&, unsigned int&);
2274:   void TComDataCU::deriveRightBottomIdx(unsigned int, unsigned int&);
228:    void TComDataCU::destroy();
2789:   void TComDataCU::fillMvpCand(unsigned int, unsigned int, RefPicList, int, _AMVPInfo*);
1586:   void TComDataCU::getAllowedChromaDir(unsigned int, unsigned int*);
3371:   UInt TComDataCU::getCoefScanIdx(unsigned int, unsigned int, bool, bool);
1745:   UInt TComDataCU::getCtxInterDir(unsigned int);
1688:   UInt TComDataCU::getCtxQtCbf(TextType, unsigned int);
1728:   UInt TComDataCU::getCtxSkipFlag(unsigned int);
1672:   UInt TComDataCU::getCtxSplitFlag(unsigned int, unsigned int);
2360:   void TComDataCU::getInterMergeCandidates(unsigned int, unsigned int, TComMvField*, unsigned char*, int&, int);
1612:   Int TComDataCU::getIntraDirLumaPredictor(unsigned int, int*, int*);
2970:   UInt TComDataCU::getIntraSizeIdx(unsigned int);
1540:   Char TComDataCU::getLastCodedQP(unsigned int);
1528:   Int TComDataCU::getLastValidPartIdx(int);
2084:   void TComDataCU::getMvField(TComDataCU*, unsigned int, RefPicList, TComMvField&);
2023:   UChar TComDataCU::getNumPartitions();
1146:   TComDataCU *TComDataCU::getPUAbove(unsigned int&, unsigned int, bool, bool, bool);
1187:   TComDataCU *TComDataCU::getPUAboveLeft(unsigned int&, unsigned int, bool);
1246:   TComDataCU *TComDataCU::getPUAboveRight(unsigned int&, unsigned int, bool);
1405:   TComDataCU *TComDataCU::getPUAboveRightAdi(unsigned int&, unsigned int, unsigned int, bool);
1309:   TComDataCU *TComDataCU::getPUBelowLeft(unsigned int&, unsigned int, bool);
1357:   TComDataCU *TComDataCU::getPUBelowLeftAdi(unsigned int&, unsigned int, unsigned int, bool);
1110:   TComDataCU *TComDataCU::getPULeft(unsigned int&, unsigned int, bool, bool);
2043:   void TComDataCU::getPartIndexAndSize(unsigned int, unsigned int&, int&, int&);
2721:   void TComDataCU::getPartPosition(unsigned int, int&, int&, int&, int&);
1497:   TComDataCU *TComDataCU::getQpMinCuAbove(unsigned int&, unsigned int);
1473:   TComDataCU *TComDataCU::getQpMinCuLeft(unsigned int&, unsigned int);
1701:   UInt TComDataCU::getQuadtreeTULog2MinSizeInCU(unsigned int);
1520:   Char TComDataCU::getRefQP(unsigned int);
3425:   UInt TComDataCU::getSCUAddr();
2329:   Bool TComDataCU::hasEqualMotion(unsigned int, TComDataCU*, unsigned int);
328:    void TComDataCU::initCU(TComPic*, unsigned int);
526:    void TComDataCU::initEstData(unsigned int, int, bool);
594:    void TComDataCU::initSubCU(TComDataCU*, unsigned int, unsigned int, int);
2942:   Bool TComDataCU::isBipredRestriction(unsigned int);
2701:   Bool TComDataCU::isDiffMER(int, int, int, int);
1783:   Bool TComDataCU::isFirstAbsZorderIdxInDepth(unsigned int, unsigned int);
1575:   Bool TComDataCU::isLosslessCoded(unsigned int);
3007:   Bool TComDataCU::isSkipped(unsigned int);
1795:   void TComDataCU::setCUTransquantBypassSubParts(bool, unsigned int, unsigned int);
1758:   void TComDataCU::setCbfSubParts(unsigned int, TextType, unsigned int, unsigned int);
1772:   void TComDataCU::setCbfSubParts(unsigned int, TextType, unsigned int, unsigned int, unsigned int);
1750:   void TComDataCU::setCbfSubParts(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
1969:   void TComDataCU::setChromIntraDirSubParts(unsigned int, unsigned int, unsigned int);
1777:   void TComDataCU::setDepthSubParts(unsigned int, unsigned int);
2996:   void TComDataCU::setIPCMFlagSubParts(bool, unsigned int, unsigned int);
1976:   void TComDataCU::setInterDirSubParts(unsigned int, unsigned int, unsigned int, unsigned int);
1854:   void TComDataCU::setLumaIntraDirSubParts(unsigned int, unsigned int, unsigned int);
1981:   void TComDataCU::setMVPIdxSubParts(int, RefPicList, unsigned int, unsigned int, unsigned int);
1986:   void TComDataCU::setMVPNumSubParts(int, RefPicList, unsigned int, unsigned int, unsigned int);
1959:   void TComDataCU::setMergeFlagSubParts(bool, unsigned int, unsigned int, unsigned int);
1964:   void TComDataCU::setMergeIndexSubParts(unsigned int, unsigned int, unsigned int, unsigned int);
743:    void TComDataCU::setOutsideCUPart(unsigned int, unsigned int);
1789:   void TComDataCU::setPartSizeSubParts(PartSize, unsigned int, unsigned int);
1806:   void TComDataCU::setPredModeSubParts(PredMode, unsigned int, unsigned int);
1812:   void TComDataCU::setQPSubCUs(int, TComDataCU*, unsigned int, unsigned int, bool&);
1840:   void TComDataCU::setQPSubParts(int, unsigned int, unsigned int);
2015:   void TComDataCU::setSizeSubParts(unsigned int, unsigned int, unsigned int, unsigned int);
1800:   void TComDataCU::setSkipFlagSubParts(bool, unsigned int, unsigned int);
1862:   void TComDataCU::setSubPart<bool>(bool, bool*, unsigned int, unsigned int, unsigned int);
1862:   void TComDataCU::setSubPart<char>(char, char*, unsigned int, unsigned int, unsigned int);
1862:   void TComDataCU::setSubPart<unsigned char>(unsigned char, unsigned char*, unsigned int, unsigned int, unsigned int);
1992:   void TComDataCU::setTrIdxSubParts(unsigned int, unsigned int, unsigned int);
2008:   void TComDataCU::setTransformSkipSubParts(unsigned int, TextType, unsigned int, unsigned int);
1999:   void TComDataCU::setTransformSkipSubParts(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
3016:   Bool TComDataCU::xAddMVPCand(_AMVPInfo*, RefPicList, int, unsigned int, MVP_DIR);
3102:   Bool TComDataCU::xAddMVPCandOrder(_AMVPInfo*, RefPicList, int, unsigned int, MVP_DIR);
3348:   void TComDataCU::xDeriveCenterIdx(unsigned int, unsigned int&);
3232:   Bool TComDataCU::xGetColMVP(RefPicList, int, int, TComMv&, int&);
3306:   UInt TComDataCU::xGetComponentBits(int);
3323:   Int TComDataCU::xGetDistScaleFactor(int, int, int, int);
3301:   UInt TComDataCU::xGetMvdBits(TComMv);
116:    void TComDataCU::~TComDataCU();
        static void _GLOBAL__sub_I_TComDataCU.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComDataCU.h:
211:    UInt &TComDataCU::getAddr();
286:    Int *&TComDataCU::getArlCoeffCb();
287:    Int *&TComDataCU::getArlCoeffCr();
285:    Int *&TComDataCU::getArlCoeffY();
385:    TComDataCU *TComDataCU::getCUAbove();
386:    TComDataCU *TComDataCU::getCUAboveLeft();
387:    TComDataCU *TComDataCU::getCUAboveRight();
388:    TComDataCU *TComDataCU::getCUColocated(RefPicList);
384:    TComDataCU *TComDataCU::getCULeft();
279:    TComCUMvField *TComDataCU::getCUMvField(RefPicList);
214:    UInt TComDataCU::getCUPelX();
215:    UInt TComDataCU::getCUPelY();
241:    Bool *TComDataCU::getCUTransquantBypass();
242:    Bool TComDataCU::getCUTransquantBypass(unsigned int);
295:    UChar *TComDataCU::getCbf(TextType);
294:    UChar TComDataCU::getCbf(unsigned int, TextType);
296:    UChar TComDataCU::getCbf(unsigned int, TextType, unsigned int);
331:    UChar *TComDataCU::getChromaIntraDir();
332:    UChar TComDataCU::getChromaIntraDir(unsigned int);
282:    TCoeff *&TComDataCU::getCoeffCb();
283:    TCoeff *&TComDataCU::getCoeffCr();
281:    TCoeff *&TComDataCU::getCoeffY();
218:    UChar *TComDataCU::getDepth();
219:    UChar TComDataCU::getDepth(unsigned int);
250:    UChar *TComDataCU::getHeight();
251:    UChar TComDataCU::getHeight(unsigned int);
340:    Bool *TComDataCU::getIPCMFlag();
341:    Bool TComDataCU::getIPCMFlag(unsigned int);
336:    UChar *TComDataCU::getInterDir();
337:    UChar TComDataCU::getInterDir(unsigned int);
326:    UChar *TComDataCU::getLumaIntraDir();
327:    UChar TComDataCU::getLumaIntraDir(unsigned int);
364:    Char *TComDataCU::getMVPIdx(RefPicList);
363:    Int TComDataCU::getMVPIdx(RefPicList, unsigned int);
368:    Char *TComDataCU::getMVPNum(RefPicList);
309:    Bool *TComDataCU::getMergeFlag();
314:    UChar *TComDataCU::getMergeIndex();
291:    Pel *&TComDataCU::getPCMSampleCb();
292:    Pel *&TComDataCU::getPCMSampleCr();
290:    Pel *&TComDataCU::getPCMSampleY();
228:    Char *TComDataCU::getPartitionSize();
229:    PartSize TComDataCU::getPartitionSize(unsigned int);
209:    TComPic *TComDataCU::getPic();
239:    Char *TComDataCU::getPredictionMode();
240:    PredMode TComDataCU::getPredictionMode(unsigned int);
256:    Char *TComDataCU::getQP();
257:    Char TComDataCU::getQP(unsigned int);
234:    Bool *TComDataCU::getSkipFlag();
235:    Bool TComDataCU::getSkipFlag(unsigned int);
210:    TComSlice *TComDataCU::getSlice();
451:    UInt TComDataCU::getSliceSegmentStartCU(unsigned int);
450:    UInt TComDataCU::getSliceStartCU(unsigned int);
452:    UInt &TComDataCU::getTotalBins();
459:    UInt &TComDataCU::getTotalBits();
457:    Double &TComDataCU::getTotalCost();
458:    UInt &TComDataCU::getTotalDistortion();
460:    UInt &TComDataCU::getTotalNumPart();
268:    UChar *TComDataCU::getTransformIdx();
269:    UChar TComDataCU::getTransformIdx(unsigned int);
272:    UChar *TComDataCU::getTransformSkip(TextType);
273:    UChar TComDataCU::getTransformSkip(unsigned int, TextType);
246:    UChar *TComDataCU::getWidth();
247:    UChar TComDataCU::getWidth(unsigned int);
212:    UInt &TComDataCU::getZorderIdxInCU();
427:    Bool TComDataCU::isIntra(unsigned int);
474:    static Bool RasterAddress::isEqualCol(Int, Int, Int);
486:    static Bool RasterAddress::isEqualRow(Int, Int, Int);
498:    static Bool RasterAddress::isEqualRowOrCol(Int, Int, Int);
508:    static Bool RasterAddress::isZeroCol(Int, Int);
519:    static Bool RasterAddress::isZeroRow(Int, Int);
531:    static Bool RasterAddress::lessThanCol(Int, Int, Int);
543:    static Bool RasterAddress::lessThanRow(Int, Int, Int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComInterpolationFilter.cpp:
166:    void TComInterpolationFilter::filter<4, false, true, false>(int, short const*, int, short*, int, int, int, short const*);
166:    void TComInterpolationFilter::filter<4, false, true, true>(int, short const*, int, short*, int, int, int, short const*);
166:    void TComInterpolationFilter::filter<4, true, false, false>(int, short const*, int, short*, int, int, int, short const*);
166:    void TComInterpolationFilter::filter<4, true, false, true>(int, short const*, int, short*, int, int, int, short const*);
166:    void TComInterpolationFilter::filter<4, true, true, false>(int, short const*, int, short*, int, int, int, short const*);
166:    void TComInterpolationFilter::filter<4, true, true, true>(int, short const*, int, short*, int, int, int, short const*);
166:    void TComInterpolationFilter::filter<8, false, true, false>(int, short const*, int, short*, int, int, int, short const*);
166:    void TComInterpolationFilter::filter<8, false, true, true>(int, short const*, int, short*, int, int, int, short const*);
166:    void TComInterpolationFilter::filter<8, true, false, false>(int, short const*, int, short*, int, int, int, short const*);
166:    void TComInterpolationFilter::filter<8, true, false, true>(int, short const*, int, short*, int, int, int, short const*);
166:    void TComInterpolationFilter::filter<8, true, true, false>(int, short const*, int, short*, int, int, int, short const*);
166:    void TComInterpolationFilter::filter<8, true, true, true>(int, short const*, int, short*, int, int, int, short const*);
92:     void TComInterpolationFilter::filterCopy(int, short const*, int, short*, int, int, int, bool, bool);
263:    void TComInterpolationFilter::filterHor<4>(int, short*, int, short*, int, int, int, bool, short const*);
263:    void TComInterpolationFilter::filterHor<8>(int, short*, int, short*, int, int, int, bool, short const*);
380:    void TComInterpolationFilter::filterHorChroma(short*, int, short*, int, int, int, int, bool);
327:    void TComInterpolationFilter::filterHorLuma(short*, int, short*, int, int, int, int, bool);
291:    void TComInterpolationFilter::filterVer<4>(int, short*, int, short*, int, int, int, bool, bool, short const*);
291:    void TComInterpolationFilter::filterVer<8>(int, short*, int, short*, int, int, int, bool, bool, short const*);
407:    void TComInterpolationFilter::filterVerChroma(short*, int, short*, int, int, int, int, bool, bool);
354:    void TComInterpolationFilter::filterVerLuma(short*, int, short*, int, int, int, int, bool, bool);
        static void _GLOBAL__sub_I_TComInterpolationFilter.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComInterpolationFilter.h:
72:     void TComInterpolationFilter::TComInterpolationFilter();
73:     void TComInterpolationFilter::~TComInterpolationFilter();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComLoopFilter.cpp:
73:     void TComLoopFilter::TComLoopFilter();
96:     void TComLoopFilter::create(unsigned int);
107:    void TComLoopFilter::destroy();
129:    void TComLoopFilter::loopFilterPic(TComPic*);
91:     void TComLoopFilter::setCfg(bool);
872:    Int TComLoopFilter::xCalcDP(short*, int);
877:    Int TComLoopFilter::xCalcDQ(short*, int);
166:    void TComLoopFilter::xDeblockCU(TComDataCU*, unsigned int, unsigned int, int);
635:    void TComLoopFilter::xEdgeFilterChroma(TComDataCU*, unsigned int, unsigned int, int, int);
522:    void TComLoopFilter::xEdgeFilterLuma(TComDataCU*, unsigned int, unsigned int, int, int);
395:    void TComLoopFilter::xGetBoundaryStrengthSingle(TComDataCU*, int, unsigned int);
828:    void TComLoopFilter::xPelFilterChroma(short*, int, int, bool, bool);
758:    void TComLoopFilter::xPelFilterLuma(short*, int, int, bool, bool, bool, int, bool, bool);
229:    void TComLoopFilter::xSetEdgefilterMultiple(TComDataCU*, unsigned int, unsigned int, int, int, bool, unsigned int, unsigned int);
278:    void TComLoopFilter::xSetEdgefilterPU(TComDataCU*, unsigned int);
254:    void TComLoopFilter::xSetEdgefilterTU(TComDataCU*, unsigned int, unsigned int, unsigned int);
341:    void TComLoopFilter::xSetLoopfilterParam(TComDataCU*, unsigned int);
860:    Bool TComLoopFilter::xUseStrongFiltering(int, int, int, int, short*);
84:     void TComLoopFilter::~TComLoopFilter();
        static void _GLOBAL__sub_I_TComLoopFilter.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComLoopFilter.h:
74:     UInt TComLoopFilter::xCalcBsIdx(TComDataCU*, unsigned int, int, int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComMotionInfo.cpp:
88:     void TComCUMvField::clearMvField();
330:    void TComCUMvField::compress(char*, int);
99:     void TComCUMvField::copyFrom(TComCUMvField const*, int, int);
108:    void TComCUMvField::copyTo(TComCUMvField*, int) const;
113:    void TComCUMvField::copyTo(TComCUMvField*, int, unsigned int, unsigned int) const;
54:     void TComCUMvField::create(unsigned int);
67:     void TComCUMvField::destroy();
128:    void TComCUMvField::setAll<TComMv>(TComMv*, TComMv const&, PartSize, int, unsigned int, int);
128:    void TComCUMvField::setAll<char>(char*, char const&, PartSize, int, unsigned int, int);
305:    void TComCUMvField::setAllMv(TComMv const&, PartSize, int, unsigned int, int);
320:    void TComCUMvField::setAllMvField(TComMvField const&, PartSize, int, unsigned int, int);
310:    void TComCUMvField::setAllMvd(TComMv const&, PartSize, int, unsigned int, int);
315:    void TComCUMvField::setAllRefIdx(int, PartSize, int, unsigned int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComMotionInfo.h:
104:    void TComCUMvField::TComCUMvField();
132:    AMVPInfo *TComCUMvField::getAMVPInfo();
128:    const TComMv &TComCUMvField::getMv(int) const;
130:    Int TComCUMvField::getRefIdx(int) const;
148:    void TComCUMvField::linkToWithOffset(TComCUMvField const*, int);
143:    void TComCUMvField::setNumPartition(int);
105:    void TComCUMvField::~TComCUMvField();
72:     void TComMvField::TComMvField();
83:     TComMv &TComMvField::getMv();
82:     const TComMv &TComMvField::getMv() const;
85:     Int TComMvField::getRefIdx() const;
74:     void TComMvField::setMvField(TComMv const&, int);
80:     void TComMvField::setRefIdx(int);
54:     void _AMVPInfo::_AMVPInfo();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComMv.h:
64:     void TComMv::TComMv();
70:     void TComMv::TComMv(short, short);
89:     Int TComMv::getHor() const;
90:     Int TComMv::getVer() const;
141:    Bool TComMv::operator!=(TComMv const&) const;
136:    Bool TComMv::operator==(TComMv const&) const;
146:    const TComMv TComMv::scaleMv(int) const;
80:     void TComMv::set(short, short);
81:     void TComMv::setHor(short);
82:     void TComMv::setVer(short);
83:     void TComMv::setZero();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComPattern.cpp:
371:    void TComPattern::fillReferenceSamples(int, short*, int*, bool*, int, int, int, int, unsigned int, unsigned int, unsigned int, unsigned int, int, bool);
562:    Int *TComPattern::getAdiCbBuf(int, int, int*);
567:    Int *TComPattern::getAdiCrBuf(int, int, int*);
557:    Int *TComPattern::getAdiOrgBuf(int, int, int*);
580:    Int *TComPattern::getPredictorPtr(unsigned int, unsigned int, int*);
176:    void TComPattern::initAdiPattern(TComDataCU*, unsigned int, unsigned int, int*, int, int, bool&, bool&, bool);
312:    void TComPattern::initAdiPatternChroma(TComDataCU*, unsigned int, unsigned int, int*, int, int, bool&, bool&);
149:    void TComPattern::initPattern(TComDataCU*, unsigned int, unsigned int);
133:    void TComPattern::initPattern(short*, short*, short*, int, int, int, int, int);
622:    Int TComPattern::isAboveAvailable(TComDataCU*, unsigned int, unsigned int, bool*);
606:    Bool TComPattern::isAboveLeftAvailable(TComDataCU*, unsigned int);
705:    Int TComPattern::isAboveRightAvailable(TComDataCU*, unsigned int, unsigned int, bool*);
745:    Int TComPattern::isBelowLeftAvailable(TComDataCU*, unsigned int, unsigned int, bool*);
663:    Int TComPattern::isLeftAvailable(TComDataCU*, unsigned int, unsigned int, bool*);
94:     void TComPatternParam::setPatternParamCU(TComDataCU*, unsigned char, unsigned char, unsigned char, int, int, unsigned int);
69:     void TComPatternParam::setPatternParamPel(short*, int, int, int, int, int);
        static void _GLOBAL__sub_I_TComPattern.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComPattern.h:
110:    Int TComPattern::getPatternLStride();
107:    Pel *TComPattern::getROIY();
109:    Int TComPattern::getROIYHeight();
108:    Int TComPattern::getROIYWidth();
71:     Pel *TComPatternParam::getROIOrigin();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComPic.cpp:
48:     void TComPic::TComPic();
124:    void TComPic::compressMotion();
68:     void TComPic::create(int, int, unsigned int, unsigned int, unsigned int, Window&, Window&, int*, bool);
98:     void TComPic::destroy();
134:    Bool TComPic::getSAOMergeAvailability(int, int);
64:     void TComPic::~TComPic();
        static void _GLOBAL__sub_I_TComPic.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComPic.h:
129:    Int TComPic::getCStride();
106:    TComDataCU *&TComPic::getCU(unsigned int);
140:    UInt TComPic::getCurrSliceIdx();
120:    UInt TComPic::getFrameWidthInCU();
98:     Bool TComPic::getIsLongTerm();
123:    UInt TComPic::getMinCUHeight();
122:    UInt TComPic::getMinCUWidth();
116:    UInt TComPic::getNumCUsInFrame();
119:    UInt TComPic::getNumPartInCU();
118:    UInt TComPic::getNumPartInHeight();
117:    UInt TComPic::getNumPartInWidth();
105:    Int TComPic::getPOC();
103:    TComPicSym *TComPic::getPicSym();
109:    TComPicYuv *TComPic::getPicYuvRec();
132:    Bool TComPic::getReconMark();
104:    TComSlice *TComPic::getSlice(int);
128:    Int TComPic::getStride();
93:     UInt TComPic::getTLayer();
96:     Bool TComPic::getUsedByCurr();
156:    bool TComPic::isField();
100:    void TComPic::setCheckLTMSBPresent(bool);
141:    void TComPic::setCurrSliceIdx(unsigned int);
99:     void TComPic::setIsLongTerm(bool);
97:     void TComPic::setUsedByCurr(bool);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComPicSym.cpp:
49:     void TComPicSym::TComPicSym();
165:    void TComPicSym::allocateNewSlice();
176:    void TComPicSym::clearSliceBuffer();
73:     void TComPicSym::create(int, int, unsigned int, unsigned int, unsigned int);
365:    void TComPicSym::deriveLoopFilterBoundaryAvailibility(int, bool&, bool&, bool&, bool&, bool&, bool&, bool&, bool&);
129:    void TComPicSym::destroy();
191:    UInt TComPicSym::getPicSCUAddr(unsigned int);
186:    UInt TComPicSym::getPicSCUEncOrder(unsigned int);
196:    void TComPicSym::initTiles(TComPPS*);
329:    UInt TComPicSym::xCalculateNxtCUAddr(unsigned int);
473:    void TComTile::TComTile();
483:    void TComTile::~TComTile();
        static void _GLOBAL__sub_I_TComPicSym.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComPicSym.h:
123:    TComDataCU *&TComPicSym::getCU(unsigned int);
139:    UInt TComPicSym::getCUOrderMap(int);
119:    UInt TComPicSym::getFrameHeightInCU();
118:    UInt TComPicSym::getFrameWidthInCU();
142:    UInt TComPicSym::getInverseCUOrderMap(int);
121:    UInt TComPicSym::getMinCUHeight();
120:    UInt TComPicSym::getMinCUWidth();
133:    Int TComPicSym::getNumColumnsMinus1();
131:    UInt TComPicSym::getNumPartInHeight();
130:    UInt TComPicSym::getNumPartInWidth();
129:    UInt TComPicSym::getNumPartition();
135:    Int TComPicSym::getNumRowsMinus1();
122:    UInt TComPicSym::getNumberOfCUsInFrame();
147:    SAOBlkParam *TComPicSym::getSAOBlkParam();
117:    TComSlice *TComPicSym::getSlice(unsigned int);
137:    TComTile *TComPicSym::getTComTile(unsigned int);
140:    UInt TComPicSym::getTileIdxMap(int);
132:    void TComPicSym::setNumColumnsMinus1(int);
134:    void TComPicSym::setNumRowsMinus1(int);
82:     void TComPicSym::~TComPicSym();
56:     void TComTile::TComTile(TComTile const&);
76:     UInt TComTile::getBottomEdgePosInCU();
78:     UInt TComTile::getFirstCUAddr();
74:     UInt TComTile::getRightEdgePosInCU();
72:     UInt TComTile::getTileHeight();
70:     UInt TComTile::getTileWidth();
56:     TComTile &TComTile::operator=(TComTile const&);
75:     void TComTile::setBottomEdgePosInCU(unsigned int);
77:     void TComTile::setFirstCUAddr(unsigned int);
73:     void TComTile::setRightEdgePosInCU(unsigned int);
71:     void TComTile::setTileHeight(unsigned int);
69:     void TComTile::setTileWidth(unsigned int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComPicYuv.cpp:
53:     void TComPicYuv::TComPicYuv();
188:    void TComPicYuv::copyToPic(TComPicYuv*);
208:    void TComPicYuv::copyToPicCb(TComPicYuv*);
217:    void TComPicYuv::copyToPicCr(TComPicYuv*);
199:    void TComPicYuv::copyToPicLuma(TComPicYuv*);
70:     void TComPicYuv::create(int, int, unsigned int, unsigned int, unsigned int);
138:    void TComPicYuv::createLuma(int, int, unsigned int, unsigned int, unsigned int);
122:    void TComPicYuv::destroy();
178:    void TComPicYuv::destroyLuma();
267:    void TComPicYuv::dump(char*, bool);
226:    void TComPicYuv::extendPicBorder();
237:    void TComPicYuv::xExtendPicCompBorder(short*, int, int, int, int, int);
66:     void TComPicYuv::~TComPicYuv();
        static void _GLOBAL__sub_I_TComPicYuv.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComPicYuv.h:
126:    Pel *TComPicYuv::getBufU();
127:    Pel *TComPicYuv::getBufV();
125:    Pel *TComPicYuv::getBufY();
115:    Int TComPicYuv::getCStride();
131:    Pel *TComPicYuv::getCbAddr();
139:    Pel *TComPicYuv::getCbAddr(int, int);
132:    Pel *TComPicYuv::getCrAddr();
140:    Pel *TComPicYuv::getCrAddr(int, int);
112:    Int TComPicYuv::getHeight();
130:    Pel *TComPicYuv::getLumaAddr();
138:    Pel *TComPicYuv::getLumaAddr(int, int);
114:    Int TComPicYuv::getStride();
111:    Int TComPicYuv::getWidth();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComPicYuvMD5.cpp:
125:    void calcCRC(TComPicYuv&, unsigned char (*) [16]);
166:    void calcChecksum(TComPicYuv&, unsigned char (*) [16]);
188:    void calcMD5(TComPicYuv&, unsigned char (*) [16]);
        static void _GLOBAL__sub_I_TComPicYuvMD5.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);
86:     static void compCRC(Int, Pel const*, UInt, UInt, UInt, UChar*);
141:    static void compChecksum(Int, Pel const*, UInt, UInt, UInt, UChar*);
45:     static void md5_block<1u>(MD5&, Pel const*, UInt);
45:     static void md5_block<2u>(MD5&, Pel const*, UInt);
66:     static void md5_plane<1u>(MD5&, Pel const*, UInt, UInt, UInt);
66:     static void md5_plane<2u>(MD5&, Pel const*, UInt, UInt, UInt);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComPrediction.cpp:
48:     void TComPrediction::TComPrediction();
661:    void TComPrediction::getMvPredAMVP(TComDataCU*, unsigned int, unsigned int, RefPicList, TComMv&);
81:     void TComPrediction::initTempBuff();
411:    void TComPrediction::motionCompensation(TComDataCU*, TComYuv*, RefPicList, int);
370:    void TComPrediction::predIntraChromaAng(int*, unsigned int, short*, unsigned int, int, int, bool, bool);
122:    Pel TComPrediction::predIntraGetPredValDC(int*, int, unsigned int, unsigned int, bool, bool);
332:    void TComPrediction::predIntraLumaAng(TComPattern*, unsigned int, short*, unsigned int, int, int, bool, bool);
393:    Bool TComPrediction::xCheckIdenticalMotion(TComDataCU*, unsigned int);
741:    void TComPrediction::xDCPredFiltering(int*, int, short*&, int, int, int);
492:    void TComPrediction::xPredInterBi(TComDataCU*, unsigned int, int, int, TComYuv*&);
599:    void TComPrediction::xPredInterChromaBlk(TComDataCU*, TComPicYuv*, unsigned int, TComMv*, int, int, TComYuv*&, bool);
554:    void TComPrediction::xPredInterLumaBlk(TComDataCU*, TComPicYuv*, unsigned int, TComMv*, int, int, TComYuv*&, bool);
483:    void TComPrediction::xPredInterUni(TComDataCU*, unsigned int, int, int, RefPicList, TComYuv*&, bool);
184:    void TComPrediction::xPredIntraAng(int, int*, int, short*&, int, unsigned int, unsigned int, unsigned int, bool, bool, bool);
688:    void TComPrediction::xPredIntraPlanar(int*, int, short*, int, unsigned int, unsigned int);
644:    void TComPrediction::xWeightedAverage(TComYuv*, TComYuv*, int, int, unsigned int, int, int, TComYuv*&);
55:     void TComPrediction::~TComPrediction();
        static void _GLOBAL__sub_I_TComPrediction.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComRdCost.cpp:
46:     void TComRdCost::TComRdCost();
391:    UInt TComRdCost::calcHAD(int, short*, int, short*, int, int, int);
59:     Double TComRdCost::calcRdCost(unsigned int, unsigned int, bool, DFunc);
113:    Double TComRdCost::calcRdCost64(unsigned long long, unsigned long long, bool, DFunc);
427:    UInt TComRdCost::getDistPart(int, short*, int, short*, int, unsigned int, unsigned int, TextType, DFunc);
177:    void TComRdCost::init();
377:    void TComRdCost::setDistParam(DistParam&, int, short*, int, short*, int, int, int, bool);
298:    void TComRdCost::setDistParam(TComPattern*, short*, int, DistParam&);
332:    void TComRdCost::setDistParam(TComPattern*, short*, int, int, DistParam&, bool);
286:    void TComRdCost::setDistParam(unsigned int, unsigned int, DFunc, DistParam&);
167:    void TComRdCost::setLambda(double);
1316:   UInt TComRdCost::xCalcHADs2x2(short*, short*, int, int, int);
1337:   UInt TComRdCost::xCalcHADs4x4(short*, short*, int, int, int);
1431:   UInt TComRdCost::xCalcHADs8x8(short*, short*, int, int, int);
270:    UInt TComRdCost::xGetComponentBits(int);
1591:   UInt TComRdCost::xGetHADs(DistParam*);
1527:   UInt TComRdCost::xGetHADs4(DistParam*);
1555:   UInt TComRdCost::xGetHADs8(DistParam*);
463:    UInt TComRdCost::xGetSAD(DistParam*);
601:    UInt TComRdCost::xGetSAD12(DistParam*);
557:    UInt TComRdCost::xGetSAD16(DistParam*);
641:    UInt TComRdCost::xGetSAD16N(DistParam*);
743:    UInt TComRdCost::xGetSAD24(DistParam*);
683:    UInt TComRdCost::xGetSAD32(DistParam*);
491:    UInt TComRdCost::xGetSAD4(DistParam*);
888:    UInt TComRdCost::xGetSAD48(DistParam*);
796:    UInt TComRdCost::xGetSAD64(DistParam*);
522:    UInt TComRdCost::xGetSAD8(DistParam*);
968:    UInt TComRdCost::xGetSSE(DistParam*);
1069:   UInt TComRdCost::xGetSSE16(DistParam*);
1114:   UInt TComRdCost::xGetSSE16N(DistParam*);
1161:   UInt TComRdCost::xGetSSE32(DistParam*);
1000:   UInt TComRdCost::xGetSSE4(DistParam*);
1221:   UInt TComRdCost::xGetSSE64(DistParam*);
1033:   UInt TComRdCost::xGetSSE8(DistParam*);
51:     void TComRdCost::~TComRdCost();
        static void _GLOBAL__sub_I_TComRdCost.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComRdCost.h:
90:     void DistParam::DistParam();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComRdCostWeightPrediction.cpp:
54:     void TComRdCostWeightPrediction::TComRdCostWeightPrediction();
167:    UInt TComRdCostWeightPrediction::xCalcHADs2x2w(short*, short*, int, int, int);
204:    UInt TComRdCostWeightPrediction::xCalcHADs4x4w(short*, short*, int, int, int);
312:    UInt TComRdCostWeightPrediction::xCalcHADs8x8w(short*, short*, int, int, int);
429:    UInt TComRdCostWeightPrediction::xGetHADs4w(DistParam*);
457:    UInt TComRdCostWeightPrediction::xGetHADs8w(DistParam*);
493:    UInt TComRdCostWeightPrediction::xGetHADsw(DistParam*);
69:     UInt TComRdCostWeightPrediction::xGetSADw(DistParam*);
113:    UInt TComRdCostWeightPrediction::xGetSSEw(DistParam*);
58:     void TComRdCostWeightPrediction::~TComRdCostWeightPrediction();
        static void _GLOBAL__sub_I_TComRdCostWeightPrediction.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComRdCostWeightPrediction.h:
84:     void TComRdCostWeightPrediction::xSetWPscale(int, int, int, int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComRom.cpp:
75:     void destroyROM();
50:     void initROM();
133:    void initRasterToPelXY(unsigned int, unsigned int, unsigned int);
119:    void initRasterToZscan(unsigned int, unsigned int, unsigned int);
342:    void initSigLastScan(unsigned int*, unsigned int*, unsigned int*, int, int);
100:    void initZscanToRaster(int, int, unsigned int, unsigned int*&);
        static void _GLOBAL__sub_I_TComRom.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp:
77:     void SAOBlkParam::SAOBlkParam();
95:     const SAOBlkParam &SAOBlkParam::operator=(SAOBlkParam const&);
87:     void SAOBlkParam::reset();
82:     void SAOBlkParam::~SAOBlkParam();
48:     void SAOOffset::SAOOffset();
66:     const SAOOffset &SAOOffset::operator=(SAOOffset const&);
58:     void SAOOffset::reset();
53:     void SAOOffset::~SAOOffset();
762:    void TComSampleAdaptiveOffset::PCMLFDisableProcess(TComPic*);
709:    void TComSampleAdaptiveOffset::SAOProcess(TComPic*);
105:    void TComSampleAdaptiveOffset::TComSampleAdaptiveOffset();
130:    void TComSampleAdaptiveOffset::create(int, int, unsigned int, unsigned int, unsigned int);
200:    void TComSampleAdaptiveOffset::destroy();
249:    Int TComSampleAdaptiveOffset::getMergeList(TComPic*, int, SAOBlkParam*, std::vector<SAOBlkParam*, std::allocator<SAOBlkParam*> >&);
725:    Pel *TComSampleAdaptiveOffset::getPicBuf(TComPicYuv*, int);
224:    void TComSampleAdaptiveOffset::invertQuantOffsets(int, int, int, int*, int*);
365:    void TComSampleAdaptiveOffset::offsetBlock(int, int, int*, short*, short*, int, int, int, int, bool, bool, bool, bool, bool, bool, bool, bool);
655:    void TComSampleAdaptiveOffset::offsetCTU(int, TComPicYuv*, TComPicYuv*, SAOBlkParam&, TComPic*);
305:    void TComSampleAdaptiveOffset::reconstructBlkSAOParam(SAOBlkParam&, std::vector<SAOBlkParam*, std::allocator<SAOBlkParam*> >&);
341:    void TComSampleAdaptiveOffset::reconstructBlkSAOParams(TComPic*, SAOBlkParam*);
792:    void TComSampleAdaptiveOffset::xPCMCURestoration(TComDataCU*, unsigned int, unsigned int);
771:    void TComSampleAdaptiveOffset::xPCMRestoration(TComPic*);
827:    void TComSampleAdaptiveOffset::xPCMSampleRestoration(TComDataCU*, unsigned int, unsigned int, TextType);
122:    void TComSampleAdaptiveOffset::~TComSampleAdaptiveOffset();
        static void _GLOBAL__sub_I_TComSampleAdaptiveOffset.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComSampleAdaptiveOffset.h:
58:     int sgn<int>(int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComSlice.cpp:
2157:   void ParameterSetManager::ParameterSetManager();
2200:   Bool ParameterSetManager::activatePPS(int, bool);
2174:   Bool ParameterSetManager::activateSPSWithSEI(int);
2168:   void ParameterSetManager::~ParameterSetManager();
2244:   void ProfileTierLevel::ProfileTierLevel();
1699:   void TComPPS::TComPPS();
1734:   void TComPPS::~TComPPS();
2257:   void TComPTL::TComPTL();
1887:   void TComRPSList::TComRPSList();
1896:   void TComRPSList::create(int);
1902:   void TComRPSList::destroy();
1919:   Int TComRPSList::getNumberOfReferencePictureSets();
1914:   TComReferencePictureSet *TComRPSList::getReferencePictureSet(int);
1924:   void TComRPSList::setNumberOfReferencePictureSets(int);
1892:   void TComRPSList::~TComRPSList();
1929:   void TComRefPicListModification::TComRefPicListModification();
1937:   void TComRefPicListModification::~TComRefPicListModification();
1739:   void TComReferencePictureSet::TComReferencePictureSet();
1799:   Bool TComReferencePictureSet::getCheckLTMSBPresent(int);
1779:   Int TComReferencePictureSet::getDeltaPOC(int);
1784:   Int TComReferencePictureSet::getNumberOfPictures();
1789:   Int TComReferencePictureSet::getPOC(int);
1823:   Int TComReferencePictureSet::getRefIdc(int);
1774:   Int TComReferencePictureSet::getUsed(int);
1869:   void TComReferencePictureSet::printDeltaPOC();
1804:   void TComReferencePictureSet::setCheckLTMSBPresent(int, bool);
1764:   void TComReferencePictureSet::setDeltaPOC(int, int);
1769:   void TComReferencePictureSet::setNumberOfPictures(int);
1794:   void TComReferencePictureSet::setPOC(int, int);
1814:   void TComReferencePictureSet::setRefIdc(int, int);
1759:   void TComReferencePictureSet::setUsed(int, bool);
1833:   void TComReferencePictureSet::sortDeltaPOC();
1755:   void TComReferencePictureSet::~TComReferencePictureSet();
1532:   void TComSPS::TComSPS();
1588:   void TComSPS::createRPSList(int);
1594:   void TComSPS::setHrdParameters(unsigned int, unsigned int, unsigned int, bool);
1582:   void TComSPS::~TComSPS();
1941:   void TComScalingList::TComScalingList();
2142:   void TComScalingList::checkDcOfMatrix();
2089:   void TComScalingList::destroy();
2105:   Int *TComScalingList::getScalingListDefaultAddress(unsigned int, unsigned int);
2075:   void TComScalingList::init();
2134:   void TComScalingList::processDefaultMatrix(unsigned int, unsigned int);
1989:   void TComScalingList::processRefMatrix(unsigned int, unsigned int, unsigned int);
1998:   Bool TComScalingList::xParseScalingList(char*);
1946:   void TComScalingList::~TComScalingList();
47:     void TComSlice::TComSlice();
173:    void TComSlice::allocSubstreamSizes(unsigned int);
994:    void TComSlice::applyReferencePictureSet(TComList<TComPic*>&, TComReferencePictureSet*);
519:    void TComSlice::checkCRA(TComReferencePictureSet*, int&, NalUnitType&, TComList<TComPic*>&);
493:    void TComSlice::checkColRefIdx(unsigned int, TComPic*);
1966:   Bool TComSlice::checkDefaultScalingList();
821:    void TComSlice::checkLeadingPictureRestrictions(TComList<TComPic*>&);
1073:   Int TComSlice::checkThatAllRefPicsAreAvailable(TComList<TComPic*>&, TComReferencePictureSet*, bool, int, bool);
660:    void TComSlice::copySliceInfo(TComSlice*);
1298:   void TComSlice::createExplicitReferencePictureSetFromReference(TComList<TComPic*>&, TComReferencePictureSet*, bool, int, bool);
579:    void TComSlice::decodingRefreshMarking(int&, bool&, TComList<TComPic*>&);
461:    Int TComSlice::getNumRpsCurrTempList();
158:    Bool TComSlice::getRapPicFlag();
1419:   void TComSlice::getWpAcDcParam(wpACDCParam*&);
1442:   void TComSlice::getWpScaling(RefPicList, int, wpScalingParam*&);
479:    void TComSlice::initEqualRef();
135:    void TComSlice::initSlice();
1427:   void TComSlice::initWpAcDcParam();
1473:   void TComSlice::initWpScaling();
801:    Bool TComSlice::isStepwiseTemporalLayerSwitchingPointCandidate(TComList<TComPic*>&);
780:    Bool TComSlice::isTemporalLayerSwitchingPoint(TComList<TComPic*>&);
1451:   void TComSlice::resetWpScaling();
1953:   void TComSlice::setDefaultScalingList();
289:    void TComSlice::setList1IdxToList0Idx();
277:    void TComSlice::setRefPOCList();
306:    void TComSlice::setRefPicList(TComList<TComPic*>&, bool);
773:    void TComSlice::setTLayerInfo(unsigned int);
179:    void TComSlice::sortPicList(TComList<TComPic*>&);
234:    TComPic *TComSlice::xGetLongTermRefPic(TComList<TComPic*>&, int, bool);
216:    TComPic *TComSlice::xGetRefPic(TComList<TComPic*>&, int);
128:    void TComSlice::~TComSlice();
1502:   void TComVPS::TComVPS();
1521:   void TComVPS::~TComVPS();
        static void _GLOBAL__sub_I_TComSlice.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComSlice.h:
1419:   void ParameterSetMap<TComPPS>::ParameterSetMap(int);
1451:   TComPPS *ParameterSetMap<TComPPS>::getPS(int);
1423:   void ParameterSetMap<TComPPS>::~ParameterSetMap();
1419:   void ParameterSetMap<TComSPS>::ParameterSetMap(int);
1451:   TComSPS *ParameterSetMap<TComSPS>::getPS(int);
1423:   void ParameterSetMap<TComSPS>::~ParameterSetMap();
1419:   void ParameterSetMap<TComVPS>::ParameterSetMap(int);
1451:   TComVPS *ParameterSetMap<TComVPS>::getPS(int);
1423:   void ParameterSetMap<TComVPS>::~ParameterSetMap();
200:    Int ProfileTierLevel::getProfileIdc() const;
277:    void TComHRD::TComHRD();
345:    UInt TComHRD::getCpbCntMinus1(int);
301:    Bool TComHRD::getSubPicCpbParamsPresentFlag();
315:    void TComHRD::setBitRateScale(unsigned int);
347:    void TComHRD::setBitRateValueMinus1(int, int, int, unsigned int);
356:    void TComHRD::setCbrFlag(int, int, int, unsigned int);
344:    void TComHRD::setCpbCntMinus1(int, unsigned int);
326:    void TComHRD::setCpbRemovalDelayLengthMinus1(unsigned int);
318:    void TComHRD::setCpbSizeScale(unsigned int);
350:    void TComHRD::setCpbSizeValueMinus1(int, int, int, unsigned int);
312:    void TComHRD::setDpbOutputDelayDuLengthMinus1(unsigned int);
329:    void TComHRD::setDpbOutputDelayLengthMinus1(unsigned int);
354:    void TComHRD::setDuBitRateValueMinus1(int, int, int, unsigned int);
306:    void TComHRD::setDuCpbRemovalDelayLengthMinus1(unsigned int);
320:    void TComHRD::setDuCpbSizeScale(unsigned int);
352:    void TComHRD::setDuCpbSizeValueMinus1(int, int, int, unsigned int);
332:    void TComHRD::setFixedPicRateFlag(int, bool);
323:    void TComHRD::setInitialCpbRemovalDelayLengthMinus1(unsigned int);
341:    void TComHRD::setLowDelayHrdFlag(int, bool);
294:    void TComHRD::setNalHrdParametersPresentFlag(bool);
338:    void TComHRD::setPicDurationInTcMinus1(int, unsigned int);
309:    void TComHRD::setSubPicCpbParamsInPicTimingSEIFlag(bool);
300:    void TComHRD::setSubPicCpbParamsPresentFlag(bool);
303:    void TComHRD::setTickDivisorMinus2(unsigned int);
297:    void TComHRD::setVclHrdParametersPresentFlag(bool);
292:    void TComHRD::~TComHRD();
983:    Int TComPPS::getChromaCbQpOffset();
985:    Int TComPPS::getChromaCrQpOffset();
970:    Bool TComPPS::getConstrainedIntraPred();
1008:   Bool TComPPS::getEntropyCodingSyncEnabledFlag() const;
1050:   UInt TComPPS::getLog2ParallelMergeLevelMinus2();
1005:   Bool TComPPS::getLoopFilterAcrossTilesEnabledFlag();
978:    UInt TComPPS::getMaxCuDQPDepth();
1016:   Int TComPPS::getNumTileColumnsMinus1() const;
976:    TComSPS *TComPPS::getSPS();
963:    Int TComPPS::getSPSId();
1028:   Int TComPPS::getSignHideFlag();
1018:   UInt TComPPS::getTileColumnWidth(unsigned int) const;
1020:   Int TComPPS::getTileNumRowsMinus1() const;
1022:   UInt TComPPS::getTileRowHeight(unsigned int) const;
1014:   Bool TComPPS::getTileUniformSpacingFlag() const;
1012:   Bool TComPPS::getTilesEnabledFlag() const;
999:    Bool TComPPS::getTransquantBypassEnableFlag();
992:    Bool TComPPS::getUseWP();
993:    Bool TComPPS::getWPBiPred();
238:    ProfileTierLevel *TComPTL::getGeneralPTL();
888:    Bool TComRefPicListModification::getRefPicListModificationFlagL0();
890:    Bool TComRefPicListModification::getRefPicListModificationFlagL1();
893:    UInt TComRefPicListModification::getRefPicSetIdxL0(unsigned int);
895:    UInt TComRefPicListModification::getRefPicSetIdxL1(unsigned int);
113:    Int TComReferencePictureSet::getDeltaRIdxMinus1();
115:    Int TComReferencePictureSet::getDeltaRPS();
111:    Bool TComReferencePictureSet::getInterRPSPrediction();
117:    Int TComReferencePictureSet::getNumRefIdc();
108:    Int TComReferencePictureSet::getNumberOfLongtermPictures();
104:    Int TComReferencePictureSet::getNumberOfNegativePictures();
106:    Int TComReferencePictureSet::getNumberOfPositivePictures();
112:    void TComReferencePictureSet::setDeltaRIdxMinus1(int);
114:    void TComReferencePictureSet::setDeltaRPS(int);
110:    void TComReferencePictureSet::setInterRPSPrediction(bool);
116:    void TComReferencePictureSet::setNumRefIdc(int);
103:    void TComReferencePictureSet::setNumberOfNegativePictures(int);
105:    void TComReferencePictureSet::setNumberOfPositivePictures(int);
799:    UInt TComSPS::getBitsForPOC();
791:    UInt TComSPS::getMaxCUDepth();
789:    UInt TComSPS::getMaxCUHeight();
787:    UInt TComSPS::getMaxCUWidth();
820:    UInt TComSPS::getMaxTrSize();
845:    UInt TComSPS::getPCMBitDepthChroma();
843:    UInt TComSPS::getPCMBitDepthLuma();
848:    Bool TComSPS::getPCMFilterDisableFlag();
869:    TComPTL *TComSPS::getPTL();
767:    UInt TComSPS::getPicHeightInLumaSamples();
765:    UInt TComSPS::getPicWidthInLumaSamples();
833:    Int TComSPS::getQpBDOffsetC();
831:    Int TComSPS::getQpBDOffsetY();
803:    UInt TComSPS::getQuadtreeTULog2MaxSize();
805:    UInt TComSPS::getQuadtreeTULog2MinSize();
808:    UInt TComSPS::getQuadtreeTUMaxDepthInter();
809:    UInt TComSPS::getQuadtreeTUMaxDepthIntra();
813:    TComRPSList *TComSPS::getRPSList();
793:    Bool TComSPS::getUsePCM();
862:    Bool TComSPS::getUseStrongIntraSmoothing();
753:    Int TComSPS::getVPSId();
866:    TComVUI *TComSPS::getVuiParameters();
864:    Bool TComSPS::getVuiParametersPresentFlag();
154:    Int *TComScalingList::getScalingListAddress(unsigned int, unsigned int);
162:    Int TComScalingList::getScalingListDC(unsigned int, unsigned int);
160:    void TComScalingList::setScalingListDC(unsigned int, unsigned int, unsigned int);
1219:   Int TComSlice::getAssociatedIRAPPOC();
1221:   NalUnitType TComSlice::getAssociatedIRAPType();
1248:   Bool TComSlice::getCheckLDC();
1243:   UInt TComSlice::getColFromL0Flag();
1244:   UInt TComSlice::getColRefIdx();
1235:   Int TComSlice::getDeblockingFilterBetaOffsetDiv2();
1233:   Bool TComSlice::getDeblockingFilterDisable();
1236:   Int TComSlice::getDeblockingFilterTcOffsetDiv2();
1407:   Bool TComSlice::getEnableTMVPFlag();
1246:   Bool TComSlice::getIsUsedAsLongTerm(int, int);
1404:   Bool TComSlice::getLFCrossSliceBoundaryFlag();
1294:   const Double *TComSlice::getLambdas() const;
1210:   TComReferencePictureSet *TComSlice::getLocalRPS();
1329:   UInt TComSlice::getMaxNumMergeCand();
1257:   NalUnitType TComSlice::getNalUnitType() const;
1333:   Bool TComSlice::getNoOutputPriorPicsFlag();
1238:   Int TComSlice::getNumRefIdx(RefPicList);
1223:   Int TComSlice::getPOC();
1193:   TComPPS *TComSlice::getPPS();
1203:   Bool TComSlice::getPicOutputFlag();
1213:   Int TComSlice::getRPSidx();
1241:   Int TComSlice::getRefPOC(RefPicList, int);
1240:   TComPic *TComSlice::getRefPic(RefPicList, int);
1190:   TComSPS *TComSlice::getSPS();
1394:   TComScalingList *TComSlice::getScalingList();
1347:   UInt TComSlice::getSliceCurStartCUAddr();
1224:   Int TComSlice::getSliceQp();
1228:   Int TComSlice::getSliceQpBase();
1231:   Int TComSlice::getSliceQpDeltaCb();
1232:   Int TComSlice::getSliceQpDeltaCr();
1358:   UInt TComSlice::getSliceSegmentCurStartCUAddr();
1222:   SliceType TComSlice::getSliceType();
1311:   UInt TComSlice::getTLayer();
1401:   Bool TComSlice::getTemporalLayerNonReferenceFlag();
1290:   Bool TComSlice::isInterB();
1253:   Bool TComSlice::isReferenced();
1293:   void TComSlice::setLambdas(double const*);
1208:   void TComSlice::setRPS(TComReferencePictureSet*);
1212:   void TComSlice::setRPSidx(int);
1252:   void TComSlice::setReferenced(bool);
548:    void TComVUI::TComVUI();
671:    TComHRD *TComVUI::getHrdParameters();
672:    TimingInfo *TComVUI::getTimingInfo();
580:    void TComVUI::~TComVUI();
372:    void TimingInfo::TimingInfo();
382:    void TimingInfo::setNumUnitsInTick(unsigned int);
385:    void TimingInfo::setTimeScale(unsigned int);
379:    void TimingInfo::setTimingInfoPresentFlag(bool);
480:    void Window::Window();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComTrQuant.cpp:
73:     void QpParam::QpParam();
81:     void TComTrQuant::TComTrQuant();
2009:   Int TComTrQuant::calcPatternSigCtx(unsigned int const*, unsigned int, unsigned int, int, int);
174:    void TComTrQuant::clearSliceARLCnt();
2536:   void TComTrQuant::destroyScalingList();
2294:   UInt TComTrQuant::getSigCoeffGroupCtxInc(unsigned int const*, unsigned int, unsigned int, int, int);
2039:   Int TComTrQuant::getSigCtxInc(int, unsigned int, int, int, int, TextType);
1185:   void TComTrQuant::init(unsigned int, bool, bool, bool, bool, bool);
2512:   void TComTrQuant::initScalingList();
166:    void TComTrQuant::initSliceQpDelta();
1285:   void TComTrQuant::invRecurTransformNxN(TComDataCU*, unsigned int, TextType, short*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, int*);
1260:   void TComTrQuant::invtransformNxN(bool, TextType, unsigned int, short*, unsigned int, int*, unsigned int, unsigned int, int, bool);
2495:   void TComTrQuant::processScalingListDec(int*, int*, int, unsigned int, unsigned int, unsigned int, int, unsigned int);
2469:   void TComTrQuant::processScalingListEnc(int*, int*, int, unsigned int, unsigned int, unsigned int, int, unsigned int);
2360:   void TComTrQuant::setErrScaleCoeff(unsigned int, unsigned int, unsigned int);
2418:   void TComTrQuant::setFlatScalingList();
192:    void TComTrQuant::setQPforQuant(int, TextType, int, int);
2318:   void TComTrQuant::setScalingList(TComScalingList*);
2339:   void TComTrQuant::setScalingListDec(TComScalingList*);
868:    void TComTrQuant::signBitHidingHDQ(int*, int*, unsigned int const*, int*, int, int);
111:    void TComTrQuant::storeSliceQpNext(TComSlice*);
1204:   void TComTrQuant::transformNxN(TComDataCU*, short*, unsigned int, int*, int*&, unsigned int, unsigned int, unsigned int&, TextType, unsigned int, bool);
1124:   void TComTrQuant::xDeQuant(int, int const*, int*, int, int, int);
2107:   UInt TComTrQuant::xGetCodedLevel(double&, double&, double&, int, unsigned int, unsigned short, unsigned short, unsigned short, unsigned short, unsigned int, unsigned int, int, double, bool) const;
2169:   Int TComTrQuant::xGetICRate(unsigned int, unsigned short, unsigned short, unsigned short, unsigned int, unsigned int) const;
2274:   Double TComTrQuant::xGetICost(double) const;
2282:   Double TComTrQuant::xGetIEPRate() const;
2240:   Double TComTrQuant::xGetRateLast(unsigned int, unsigned int) const;
2264:   Double TComTrQuant::xGetRateSigCoef(unsigned short, unsigned short) const;
2226:   Double TComTrQuant::xGetRateSigCoeffGroup(unsigned short, unsigned short) const;
1370:   void TComTrQuant::xIT(int, unsigned int, int*, short*, unsigned int, int, int);
1442:   void TComTrQuant::xITransformSkip(int, int*, short*, unsigned int, int, int);
993:    void TComTrQuant::xQuant(TComDataCU*, int*, int*, int*&, int, int, unsigned int&, TextType, unsigned int);
1489:   void TComTrQuant::xRateDistOptQuant(TComDataCU*, int*, int*, int*&, unsigned int, unsigned int, unsigned int&, TextType, unsigned int);
2404:   void TComTrQuant::xSetScalingListDec(TComScalingList*, unsigned int, unsigned int, unsigned int);
2387:   void TComTrQuant::xSetScalingListEnc(TComScalingList*, unsigned int, unsigned int, unsigned int);
1341:   void TComTrQuant::xT(int, unsigned int, short*, unsigned int, int*, int, int);
1402:   void TComTrQuant::xTransformSkip(int, short*, unsigned int, int*, int, int);
2441:   void TComTrQuant::xsetFlatScalingList(unsigned int, unsigned int, unsigned int);
93:     void TComTrQuant::~TComTrQuant();
426:    void fastForwardDst(short*, short*, int);
445:    void fastInverseDst(short*, short*, int);
563:    void partialButterfly16(short*, short*, int, int);
661:    void partialButterfly32(short*, short*, int, int);
400:    void partialButterfly4(short*, short*, int, int);
490:    void partialButterfly8(short*, short*, int, int);
614:    void partialButterflyInverse16(short*, short*, int, int);
722:    void partialButterflyInverse32(short*, short*, int, int);
464:    void partialButterflyInverse4(short*, short*, int, int);
527:    void partialButterflyInverse8(short*, short*, int, int);
829:    void xITrMxN(int, short*, short*, int, int, unsigned int);
786:    void xTrMxN(int, short*, short*, int, int, unsigned int);
        static void _GLOBAL__sub_I_TComTrQuant.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComTrQuant.h:
97:     void QpParam::clear();
107:    Int QpParam::rem() const;
89:     void QpParam::setQpParam(int);
180:    Int *TComTrQuant::getDequantCoeff(unsigned int, unsigned int, unsigned int);
178:    Double *TComTrQuant::getErrScaleCoeff(unsigned int, unsigned int, unsigned int);
179:    Int *TComTrQuant::getQuantCoeff(unsigned int, unsigned int, unsigned int);
182:    Bool TComTrQuant::getUseScalingList();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComWeightPrediction.cpp:
64:     void TComWeightPrediction::TComWeightPrediction();
79:     void TComWeightPrediction::addWeightBi(TComYuv*, TComYuv*, unsigned int, unsigned int, unsigned int, wpScalingParam*, wpScalingParam*, TComYuv*, bool);
180:    void TComWeightPrediction::addWeightUni(TComYuv*, unsigned int, unsigned int, unsigned int, wpScalingParam*, TComYuv*);
271:    void TComWeightPrediction::getWpScaling(TComDataCU*, int, int, wpScalingParam*&, wpScalingParam*&);
350:    void TComWeightPrediction::xWeightedPredictionBi(TComDataCU*, TComYuv*, TComYuv*, int, int, unsigned int, int, int, TComYuv*);
388:    void TComWeightPrediction::xWeightedPredictionUni(TComDataCU*, TComYuv*, unsigned int, int, int, RefPicList, TComYuv*&, int);
        static void _GLOBAL__sub_I_TComWeightPrediction.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);
47:     static Pel weightBidirC(Int, Pel, Int, Pel, Int, Int, Int);
43:     static Pel weightBidirY(Int, Pel, Int, Pel, Int, Int, Int);
56:     static Pel weightUnidirC(Int, Pel, Int, Int, Int);
52:     static Pel weightUnidirY(Int, Pel, Int, Int, Int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComYuv.cpp:
51:     void TComYuv::TComYuv();
520:    void TComYuv::addAvg(TComYuv*, TComYuv*, unsigned int, unsigned int, unsigned int);
401:    void TComYuv::addClip(TComYuv*, TComYuv*, unsigned int, unsigned int);
430:    void TComYuv::addClipChroma(TComYuv*, TComYuv*, unsigned int, unsigned int);
407:    void TComYuv::addClipLuma(TComYuv*, TComYuv*, unsigned int, unsigned int);
84:     void TComYuv::clear();
164:    void TComYuv::copyFromPicChroma(TComPicYuv*, unsigned int, unsigned int);
147:    void TComYuv::copyFromPicLuma(TComPicYuv*, unsigned int, unsigned int);
141:    void TComYuv::copyFromPicYuv(TComPicYuv*, unsigned int, unsigned int);
258:    void TComYuv::copyPartToChroma(TComYuv*, unsigned int);
237:    void TComYuv::copyPartToLuma(TComYuv*, unsigned int);
311:    void TComYuv::copyPartToPartChroma(TComYuv*, unsigned int, unsigned int, unsigned int);
338:    void TComYuv::copyPartToPartChroma(TComYuv*, unsigned int, unsigned int, unsigned int, unsigned int);
290:    void TComYuv::copyPartToPartLuma(TComYuv*, unsigned int, unsigned int, unsigned int);
284:    void TComYuv::copyPartToPartYuv(TComYuv*, unsigned int, unsigned int, unsigned int);
231:    void TComYuv::copyPartToYuv(TComYuv*, unsigned int);
209:    void TComYuv::copyToPartChroma(TComYuv*, unsigned int);
192:    void TComYuv::copyToPartLuma(TComYuv*, unsigned int);
186:    void TComYuv::copyToPartYuv(TComYuv*, unsigned int);
117:    void TComYuv::copyToPicChroma(TComPicYuv*, unsigned int, unsigned int, unsigned int, unsigned int);
97:     void TComYuv::copyToPicLuma(TComPicYuv*, unsigned int, unsigned int, unsigned int, unsigned int);
91:     void TComYuv::copyToPicYuv(TComPicYuv*, unsigned int, unsigned int, unsigned int, unsigned int);
62:     void TComYuv::create(unsigned int, unsigned int);
76:     void TComYuv::destroy();
586:    void TComYuv::removeHighFreq(TComYuv*, unsigned int, unsigned int, unsigned int);
461:    void TComYuv::subtract(TComYuv*, TComYuv*, unsigned int, unsigned int);
490:    void TComYuv::subtractChroma(TComYuv*, TComYuv*, unsigned int, unsigned int);
467:    void TComYuv::subtractLuma(TComYuv*, TComYuv*, unsigned int, unsigned int);
58:     void TComYuv::~TComYuv();
        static void _GLOBAL__sub_I_TComYuv.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TComYuv.h:
75:     Int TComYuv::getAddrOffset(unsigned int, unsigned int);
83:     Int TComYuv::getAddrOffset(unsigned int, unsigned int, unsigned int);
180:    UInt TComYuv::getCHeight();
176:    UInt TComYuv::getCStride();
181:    UInt TComYuv::getCWidth();
166:    Pel *TComYuv::getCbAddr(unsigned int);
171:    Pel *TComYuv::getCbAddr(unsigned int, unsigned int);
167:    Pel *TComYuv::getCrAddr(unsigned int);
172:    Pel *TComYuv::getCrAddr(unsigned int, unsigned int);
177:    UInt TComYuv::getHeight();
160:    Pel *TComYuv::getLumaAddr();
165:    Pel *TComYuv::getLumaAddr(unsigned int);
170:    Pel *TComYuv::getLumaAddr(unsigned int, unsigned int);
175:    UInt TComYuv::getStride();
179:    UInt TComYuv::getWidth();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/TLibCommon/TypeDef.h:
330:    SAOOffset &SAOBlkParam::operator[](int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/libmd5/MD5.h:
45:     void MD5::MD5();
62:     void MD5::finalize(unsigned char*);
54:     void MD5::update(unsigned char*, unsigned int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibCommon/../../../../source/Lib/libmd5/libmd5.c:
112:    void MD5Final(unsigned char *, context_md5_t *);
49:     void MD5Init(context_md5_t *);
64:     void MD5Update(context_md5_t *, unsigned char *, unsigned int);
175:    static void MD5Transform(uint32_t *, const uint32_t *);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/AccessUnit.h:
59:     void AccessUnit::AccessUnit();
59:     void AccessUnit::AccessUnit(AccessUnit const&);
62:     void AccessUnit::~AccessUnit();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/CommonDef.h:
134:    double Clip3<double>(double, double, double);
134:    int Clip3<int>(int, int, int);
131:    int ClipC<int>(int);
130:    int ClipY<int>(int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/ContextModel.h:
59:     void ContextModel::ContextModel();
78:     Int ContextModel::getEntropyBits(short);
86:     Int ContextModel::getEntropyBitsTrm(int);
63:     UChar ContextModel::getMps();
62:     UChar ContextModel::getState();
88:     void ContextModel::setBinsCoded(unsigned int);
81:     void ContextModel::update(int);
68:     void ContextModel::updateLPS();
73:     void ContextModel::updateMPS();
60:     void ContextModel::~ContextModel();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/ContextModel3DBuffer.h:
89:     void ContextModel3DBuffer::copyFrom(ContextModel3DBuffer*);
77:     ContextModel *ContextModel3DBuffer::get(unsigned int);
73:     ContextModel *ContextModel3DBuffer::get(unsigned int, unsigned int);
69:     ContextModel &ContextModel3DBuffer::get(unsigned int, unsigned int, unsigned int);
66:     void ContextModel3DBuffer::~ContextModel3DBuffer();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/NAL.h:
52:     void NALUnit::NALUnit(NalUnitType, int, int);
84:     Bool NALUnit::isSei();
65:     Bool NALUnit::isSlice();
90:     Bool NALUnit::isVcl();
101:    void NALUnitEBSP::~NALUnitEBSP();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/SEI.h:
76:     void SEI::SEI();
77:     void SEI::~SEI();
125:    void SEIActiveParameterSets::SEIActiveParameterSets();
123:    SEI::PayloadType SEIActiveParameterSets::payloadType() const;
131:    void SEIActiveParameterSets::~SEIActiveParameterSets();
145:    void SEIBufferingPeriod::SEIBufferingPeriod();
143:    SEI::PayloadType SEIBufferingPeriod::payloadType() const;
156:    void SEIBufferingPeriod::~SEIBufferingPeriod();
106:    void SEIDecodedPictureHash::SEIDecodedPictureHash();
104:    SEI::PayloadType SEIDecodedPictureHash::payloadType() const;
107:    void SEIDecodedPictureHash::~SEIDecodedPictureHash();
213:    void SEIDecodingUnitInfo::SEIDecodingUnitInfo();
211:    SEI::PayloadType SEIDecodingUnitInfo::payloadType() const;
219:    void SEIDecodingUnitInfo::~SEIDecodingUnitInfo();
271:    void SEIDisplayOrientation::SEIDisplayOrientation();
269:    SEI::PayloadType SEIDisplayOrientation::payloadType() const;
276:    void SEIDisplayOrientation::~SEIDisplayOrientation();
243:    void SEIFramePacking::SEIFramePacking();
241:    SEI::PayloadType SEIFramePacking::payloadType() const;
244:    void SEIFramePacking::~SEIFramePacking();
307:    void SEIGradualDecodingRefreshInfo::SEIGradualDecodingRefreshInfo();
305:    SEI::PayloadType SEIGradualDecodingRefreshInfo::payloadType() const;
310:    void SEIGradualDecodingRefreshInfo::~SEIGradualDecodingRefreshInfo();
174:    void SEIPictureTiming::SEIPictureTiming();
172:    SEI::PayloadType SEIPictureTiming::payloadType() const;
182:    void SEIPictureTiming::~SEIPictureTiming();
231:    void SEIRecoveryPoint::SEIRecoveryPoint();
229:    SEI::PayloadType SEIRecoveryPoint::payloadType() const;
232:    void SEIRecoveryPoint::~SEIRecoveryPoint();
320:    void SEISOPDescription::SEISOPDescription();
318:    SEI::PayloadType SEISOPDescription::payloadType() const;
321:    void SEISOPDescription::~SEISOPDescription();
383:    void SEIScalableNesting::SEIScalableNesting();
381:    SEI::PayloadType SEIScalableNesting::payloadType() const;
384:    void SEIScalableNesting::~SEIScalableNesting();
292:    void SEITemporalLevel0Index::SEITemporalLevel0Index();
290:    SEI::PayloadType SEITemporalLevel0Index::payloadType() const;
296:    void SEITemporalLevel0Index::~SEITemporalLevel0Index();
336:    void SEIToneMappingInfo::SEIToneMappingInfo();
335:    SEI::PayloadType SEIToneMappingInfo::payloadType() const;
337:    void SEIToneMappingInfo::~SEIToneMappingInfo();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComBitCounter.h:
61:     void TComBitCounter::TComBitCounter();
66:     UInt TComBitCounter::getNumberOfWrittenBits() const;
65:     void TComBitCounter::resetBits();
64:     void TComBitCounter::write(unsigned int, unsigned int);
62:     void TComBitCounter::~TComBitCounter();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComBitStream.h:
59:     void TComBitIf::TComBitIf();
62:     void TComBitIf::writeAlignOne();
63:     void TComBitIf::writeAlignZero();
67:     void TComBitIf::~TComBitIf();
146:    std::vector<unsigned char, std::allocator<unsigned char> > &TComOutputBitstream::getFIFO();
139:    UInt TComOutputBitstream::getNumberOfWrittenBits() const;

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComDataCU.h:
211:    UInt &TComDataCU::getAddr();
286:    Int *&TComDataCU::getArlCoeffCb();
287:    Int *&TComDataCU::getArlCoeffCr();
285:    Int *&TComDataCU::getArlCoeffY();
385:    TComDataCU *TComDataCU::getCUAbove();
279:    TComCUMvField *TComDataCU::getCUMvField(RefPicList);
214:    UInt TComDataCU::getCUPelX();
215:    UInt TComDataCU::getCUPelY();
242:    Bool TComDataCU::getCUTransquantBypass(unsigned int);
295:    UChar *TComDataCU::getCbf(TextType);
294:    UChar TComDataCU::getCbf(unsigned int, TextType);
296:    UChar TComDataCU::getCbf(unsigned int, TextType, unsigned int);
332:    UChar TComDataCU::getChromaIntraDir(unsigned int);
282:    TCoeff *&TComDataCU::getCoeffCb();
283:    TCoeff *&TComDataCU::getCoeffCr();
281:    TCoeff *&TComDataCU::getCoeffY();
219:    UChar TComDataCU::getDepth(unsigned int);
251:    UChar TComDataCU::getHeight(unsigned int);
341:    Bool TComDataCU::getIPCMFlag(unsigned int);
337:    UChar TComDataCU::getInterDir(unsigned int);
327:    UChar TComDataCU::getLumaIntraDir(unsigned int);
363:    Int TComDataCU::getMVPIdx(RefPicList, unsigned int);
367:    Int TComDataCU::getMVPNum(RefPicList, unsigned int);
323:    Bool TComDataCU::getMergeAMP();
310:    Bool TComDataCU::getMergeFlag(unsigned int);
315:    UChar TComDataCU::getMergeIndex(unsigned int);
375:    void TComDataCU::getMvPredAbove(TComMv&);
376:    void TComDataCU::getMvPredAboveRight(TComMv&);
374:    void TComDataCU::getMvPredLeft(TComMv&);
291:    Pel *&TComDataCU::getPCMSampleCb();
292:    Pel *&TComDataCU::getPCMSampleCr();
290:    Pel *&TComDataCU::getPCMSampleY();
229:    PartSize TComDataCU::getPartitionSize(unsigned int);
216:    TComPattern *TComDataCU::getPattern();
209:    TComPic *TComDataCU::getPic();
240:    PredMode TComDataCU::getPredictionMode(unsigned int);
257:    Char TComDataCU::getQP(unsigned int);
299:    UChar TComDataCU::getQtRootCbf(unsigned int);
210:    TComSlice *TComDataCU::getSlice();
451:    UInt TComDataCU::getSliceSegmentStartCU(unsigned int);
452:    UInt &TComDataCU::getTotalBins();
459:    UInt &TComDataCU::getTotalBits();
457:    Double &TComDataCU::getTotalCost();
458:    UInt &TComDataCU::getTotalDistortion();
460:    UInt &TComDataCU::getTotalNumPart();
268:    UChar *TComDataCU::getTransformIdx();
269:    UChar TComDataCU::getTransformIdx(unsigned int);
272:    UChar *TComDataCU::getTransformSkip(TextType);
273:    UChar TComDataCU::getTransformSkip(unsigned int, TextType);
247:    UChar TComDataCU::getWidth(unsigned int);
212:    UInt &TComDataCU::getZorderIdxInCU();
427:    Bool TComDataCU::isIntra(unsigned int);
342:    void TComDataCU::setIPCMFlag(unsigned int, bool);
322:    void TComDataCU::setMergeAMP(bool);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComList.h:
61:     void TComList<TComPic*>::TComList();
89:     void TComList<TComPic*>::pushBack(TComPic* const&);
61:     void TComList<TComPic*>::~TComList();
82:     TComPicYuv *TComList<TComPicYuv*>::popFront();
89:     void TComList<TComPicYuv*>::pushBack(TComPicYuv* const&);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComLoopFilter.h:
117:    Int TComLoopFilter::getBeta(int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComMotionInfo.h:
132:    AMVPInfo *TComCUMvField::getAMVPInfo();
129:    const TComMv &TComCUMvField::getMvd(int) const;
130:    Int TComCUMvField::getRefIdx(int) const;
72:     void TComMvField::TComMvField();
83:     TComMv &TComMvField::getMv();
74:     void TComMvField::setMvField(TComMv const&, int);
54:     void _AMVPInfo::_AMVPInfo();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComMv.h:
64:     void TComMv::TComMv();
70:     void TComMv::TComMv(short, short);
91:     Int TComMv::getAbsHor() const;
92:     Int TComMv::getAbsVer() const;
89:     Int TComMv::getHor() const;
90:     Int TComMv::getVer() const;
98:     const TComMv &TComMv::operator+=(TComMv const&);
126:    const TComMv TComMv::operator-(TComMv const&) const;
119:    const TComMv &TComMv::operator<<=(int);
136:    Bool TComMv::operator==(TComMv const&) const;
112:    const TComMv &TComMv::operator>>=(int);
80:     void TComMv::set(short, short);
81:     void TComMv::setHor(short);
82:     void TComMv::setVer(short);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComPattern.h:
110:    Int TComPattern::getPatternLStride();
107:    Pel *TComPattern::getROIY();
109:    Int TComPattern::getROIYHeight();
108:    Int TComPattern::getROIYWidth();
71:     Pel *TComPatternParam::getROIOrigin();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComPic.h:
143:    void TComPic::allocateNewSlice();
144:    void TComPic::clearSliceBuffer();
106:    TComDataCU *&TComPic::getCU(unsigned int);
140:    UInt TComPic::getCurrSliceIdx();
121:    UInt TComPic::getFrameHeightInCU();
120:    UInt TComPic::getFrameWidthInCU();
123:    UInt TComPic::getMinCUHeight();
122:    UInt TComPic::getMinCUWidth();
142:    UInt TComPic::getNumAllocatedSlice();
116:    UInt TComPic::getNumCUsInFrame();
119:    UInt TComPic::getNumPartInCU();
117:    UInt TComPic::getNumPartInWidth();
105:    Int TComPic::getPOC();
103:    TComPicSym *TComPic::getPicSym();
108:    TComPicYuv *TComPic::getPicYuvOrg();
109:    TComPicYuv *TComPic::getPicYuvRec();
104:    TComSlice *TComPic::getSlice(int);
93:     UInt TComPic::getTLayer();
156:    bool TComPic::isField();
154:    bool TComPic::isTopField();
141:    void TComPic::setCurrSliceIdx(unsigned int);
155:    void TComPic::setField(bool);
113:    void TComPic::setPicYuvPred(TComPicYuv*);
114:    void TComPic::setPicYuvResi(TComPicYuv*);
131:    void TComPic::setReconMark(bool);
94:     void TComPic::setTLayer(unsigned int);
153:    void TComPic::setTopField(bool);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComPicSym.h:
123:    TComDataCU *&TComPicSym::getCU(unsigned int);
139:    UInt TComPicSym::getCUOrderMap(int);
119:    UInt TComPicSym::getFrameHeightInCU();
118:    UInt TComPicSym::getFrameWidthInCU();
142:    UInt TComPicSym::getInverseCUOrderMap(int);
121:    UInt TComPicSym::getMinCUHeight();
120:    UInt TComPicSym::getMinCUWidth();
126:    UInt TComPicSym::getNumAllocatedSlice();
133:    Int TComPicSym::getNumColumnsMinus1();
130:    UInt TComPicSym::getNumPartInWidth();
129:    UInt TComPicSym::getNumPartition();
135:    Int TComPicSym::getNumRowsMinus1();
136:    Int TComPicSym::getNumTiles();
122:    UInt TComPicSym::getNumberOfCUsInFrame();
147:    SAOBlkParam *TComPicSym::getSAOBlkParam();
117:    TComSlice *TComPicSym::getSlice(unsigned int);
137:    TComTile *TComPicSym::getTComTile(unsigned int);
140:    UInt TComPicSym::getTileIdxMap(int);
138:    void TComPicSym::setCUOrderMap(int, int);
141:    void TComPicSym::setInverseCUOrderMap(int, int);
78:     UInt TComTile::getFirstCUAddr();
72:     UInt TComTile::getTileHeight();
70:     UInt TComTile::getTileWidth();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComPicYuv.h:
126:    Pel *TComPicYuv::getBufU();
127:    Pel *TComPicYuv::getBufV();
125:    Pel *TComPicYuv::getBufY();
115:    Int TComPicYuv::getCStride();
131:    Pel *TComPicYuv::getCbAddr();
139:    Pel *TComPicYuv::getCbAddr(int, int);
118:    Int TComPicYuv::getChromaMargin();
132:    Pel *TComPicYuv::getCrAddr();
140:    Pel *TComPicYuv::getCrAddr(int, int);
112:    Int TComPicYuv::getHeight();
130:    Pel *TComPicYuv::getLumaAddr();
135:    Pel *TComPicYuv::getLumaAddr(int);
138:    Pel *TComPicYuv::getLumaAddr(int, int);
117:    Int TComPicYuv::getLumaMargin();
114:    Int TComPicYuv::getStride();
111:    Int TComPicYuv::getWidth();
159:    void TComPicYuv::setBorderExtension(bool);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComRdCost.h:
90:     void DistParam::DistParam();
194:    UInt TComRdCost::getBits(int, int);
156:    Double TComRdCost::getChromaWeight();
185:    UInt TComRdCost::getCost(int, int);
193:    UInt TComRdCost::getCost(unsigned int);
155:    Double TComRdCost::getLambda();
174:    void TComRdCost::getMotionCost(bool, int);
153:    Double TComRdCost::getSqrtLambda();
148:    void TComRdCost::setCbDistortionWeight(double);
184:    void TComRdCost::setCostScale(int);
149:    void TComRdCost::setCrDistortionWeight(double);
151:    void TComRdCost::setFrameLambda(double);
175:    void TComRdCost::setPredictor(TComMv&);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComSampleAdaptiveOffset.h:
58:     int sgn<int>(int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComSlice.h:
218:    Bool ProfileTierLevel::getFrameOnlyConstraintFlag() const;
212:    Bool ProfileTierLevel::getInterlacedSourceFlag() const;
206:    Int ProfileTierLevel::getLevelIdc() const;
215:    Bool ProfileTierLevel::getNonPackedConstraintFlag() const;
203:    Bool ProfileTierLevel::getProfileCompatibilityFlag(int) const;
200:    Int ProfileTierLevel::getProfileIdc() const;
194:    Int ProfileTierLevel::getProfileSpace() const;
209:    Bool ProfileTierLevel::getProgressiveSourceFlag() const;
197:    Bool ProfileTierLevel::getTierFlag() const;
219:    void ProfileTierLevel::setFrameOnlyConstraintFlag(bool);
213:    void ProfileTierLevel::setInterlacedSourceFlag(bool);
207:    void ProfileTierLevel::setLevelIdc(int);
216:    void ProfileTierLevel::setNonPackedConstraintFlag(bool);
204:    void ProfileTierLevel::setProfileCompatibilityFlag(int, bool);
201:    void ProfileTierLevel::setProfileIdc(int);
210:    void ProfileTierLevel::setProgressiveSourceFlag(bool);
198:    void ProfileTierLevel::setTierFlag(bool);
277:    void TComHRD::TComHRD();
316:    UInt TComHRD::getBitRateScale();
348:    UInt TComHRD::getBitRateValueMinus1(int, int, int);
357:    Bool TComHRD::getCbrFlag(int, int, int);
345:    UInt TComHRD::getCpbCntMinus1(int);
361:    Bool TComHRD::getCpbDpbDelaysPresentFlag();
327:    UInt TComHRD::getCpbRemovalDelayLengthMinus1();
319:    UInt TComHRD::getCpbSizeScale();
351:    UInt TComHRD::getCpbSizeValueMinus1(int, int, int);
313:    UInt TComHRD::getDpbOutputDelayDuLengthMinus1();
330:    UInt TComHRD::getDpbOutputDelayLengthMinus1();
355:    UInt TComHRD::getDuBitRateValueMinus1(int, int, int);
307:    UInt TComHRD::getDuCpbRemovalDelayLengthMinus1();
321:    UInt TComHRD::getDuCpbSizeScale();
353:    UInt TComHRD::getDuCpbSizeValueMinus1(int, int, int);
333:    Bool TComHRD::getFixedPicRateFlag(int);
336:    Bool TComHRD::getFixedPicRateWithinCvsFlag(int);
324:    UInt TComHRD::getInitialCpbRemovalDelayLengthMinus1();
342:    Bool TComHRD::getLowDelayHrdFlag(int);
295:    Bool TComHRD::getNalHrdParametersPresentFlag();
360:    UInt TComHRD::getNumDU();
339:    UInt TComHRD::getPicDurationInTcMinus1(int);
310:    Bool TComHRD::getSubPicCpbParamsInPicTimingSEIFlag();
301:    Bool TComHRD::getSubPicCpbParamsPresentFlag();
304:    UInt TComHRD::getTickDivisorMinus2();
298:    Bool TComHRD::getVclHrdParametersPresentFlag();
335:    void TComHRD::setFixedPicRateWithinCvsFlag(int, bool);
359:    void TComHRD::setNumDU(unsigned int);
292:    void TComHRD::~TComHRD();
1032:   Bool TComPPS::getCabacInitPresentFlag();
983:    Int TComPPS::getChromaCbQpOffset();
985:    Int TComPPS::getChromaCrQpOffset();
970:    Bool TComPPS::getConstrainedIntraPred();
1041:   Int TComPPS::getDeblockingFilterBetaOffsetDiv2();
1035:   Bool TComPPS::getDeblockingFilterControlPresentFlag();
1037:   Bool TComPPS::getDeblockingFilterOverrideEnabledFlag();
1043:   Int TComPPS::getDeblockingFilterTcOffsetDiv2();
1006:   Bool TComPPS::getDependentSliceSegmentsEnabledFlag() const;
1033:   UInt TComPPS::getEncCABACTableIdx();
1008:   Bool TComPPS::getEntropyCodingSyncEnabledFlag() const;
1048:   Bool TComPPS::getListsModificationPresentFlag();
1050:   UInt TComPPS::getLog2ParallelMergeLevelMinus2();
1055:   Bool TComPPS::getLoopFilterAcrossSlicesEnabledFlag();
1005:   Bool TComPPS::getLoopFilterAcrossTilesEnabledFlag();
978:    UInt TComPPS::getMaxCuDQPDepth();
980:    UInt TComPPS::getMinCuDQPSize();
1052:   Int TComPPS::getNumExtraSliceHeaderBits();
988:    UInt TComPPS::getNumRefIdxL0DefaultActive();
990:    UInt TComPPS::getNumRefIdxL1DefaultActive();
1025:   Int TComPPS::getNumSubstreams();
1016:   Int TComPPS::getNumTileColumnsMinus1() const;
997:    Bool TComPPS::getOutputFlagPresentFlag();
961:    Int TComPPS::getPPSId();
1039:   Bool TComPPS::getPicDisableDeblockingFilterFlag();
966:    Int TComPPS::getPicInitQPMinus26();
976:    TComSPS *TComPPS::getSPS();
963:    Int TComPPS::getSPSId();
1044:   Bool TComPPS::getScalingListPresentFlag();
1028:   Int TComPPS::getSignHideFlag();
972:    Bool TComPPS::getSliceChromaQpFlag();
1056:   Bool TComPPS::getSliceHeaderExtensionPresentFlag();
1018:   UInt TComPPS::getTileColumnWidth(unsigned int) const;
1020:   Int TComPPS::getTileNumRowsMinus1() const;
1022:   UInt TComPPS::getTileRowHeight(unsigned int) const;
1014:   Bool TComPPS::getTileUniformSpacingFlag() const;
1012:   Bool TComPPS::getTilesEnabledFlag() const;
999:    Bool TComPPS::getTransquantBypassEnableFlag();
968:    Bool TComPPS::getUseDQP();
1001:   Bool TComPPS::getUseTransformSkip();
992:    Bool TComPPS::getUseWP();
993:    Bool TComPPS::getWPBiPred();
1030:   void TComPPS::setCabacInitPresentFlag(bool);
982:    void TComPPS::setChromaCbQpOffset(int);
984:    void TComPPS::setChromaCrQpOffset(int);
971:    void TComPPS::setConstrainedIntraPred(bool);
1040:   void TComPPS::setDeblockingFilterBetaOffsetDiv2(int);
1034:   void TComPPS::setDeblockingFilterControlPresentFlag(bool);
1036:   void TComPPS::setDeblockingFilterOverrideEnabledFlag(bool);
1042:   void TComPPS::setDeblockingFilterTcOffsetDiv2(int);
1007:   void TComPPS::setDependentSliceSegmentsEnabledFlag(bool);
1031:   void TComPPS::setEncCABACTableIdx(int);
1009:   void TComPPS::setEntropyCodingSyncEnabledFlag(bool);
1051:   void TComPPS::setLog2ParallelMergeLevelMinus2(unsigned int);
1054:   void TComPPS::setLoopFilterAcrossSlicesEnabledFlag(bool);
1004:   void TComPPS::setLoopFilterAcrossTilesEnabledFlag(bool);
977:    void TComPPS::setMaxCuDQPDepth(unsigned int);
979:    void TComPPS::setMinCuDQPSize(unsigned int);
987:    void TComPPS::setNumRefIdxL0DefaultActive(unsigned int);
989:    void TComPPS::setNumRefIdxL1DefaultActive(unsigned int);
1024:   void TComPPS::setNumSubstreams(int);
1015:   void TComPPS::setNumTileColumnsMinus1(int);
1019:   void TComPPS::setNumTileRowsMinus1(int);
996:    void TComPPS::setOutputFlagPresentFlag(bool);
1038:   void TComPPS::setPicDisableDeblockingFilterFlag(bool);
975:    void TComPPS::setSPS(TComSPS*);
1045:   void TComPPS::setScalingListPresentFlag(bool);
1027:   void TComPPS::setSignHideFlag(int);
1017:   void TComPPS::setTileColumnWidth(std::vector<int, std::allocator<int> > const&);
1021:   void TComPPS::setTileRowHeight(std::vector<int, std::allocator<int> > const&);
1013:   void TComPPS::setTileUniformSpacingFlag(bool);
1011:   void TComPPS::setTilesEnabledFlag(bool);
998:    void TComPPS::setTransquantBypassEnableFlag(bool);
969:    void TComPPS::setUseDQP(bool);
1002:   void TComPPS::setUseTransformSkip(bool);
994:    void TComPPS::setUseWP(bool);
995:    void TComPPS::setWPBiPred(bool);
238:    ProfileTierLevel *TComPTL::getGeneralPTL();
235:    Bool TComPTL::getSubLayerLevelPresentFlag(int) const;
239:    ProfileTierLevel *TComPTL::getSubLayerPTL(int);
232:    Bool TComPTL::getSubLayerProfilePresentFlag(int) const;
888:    Bool TComRefPicListModification::getRefPicListModificationFlagL0();
890:    Bool TComRefPicListModification::getRefPicListModificationFlagL1();
893:    UInt TComRefPicListModification::getRefPicSetIdxL0(unsigned int);
895:    UInt TComRefPicListModification::getRefPicSetIdxL1(unsigned int);
889:    void TComRefPicListModification::setRefPicListModificationFlagL0(bool);
891:    void TComRefPicListModification::setRefPicListModificationFlagL1(bool);
87:     Int TComReferencePictureSet::getDeltaPocMSBCycleLT(int);
89:     Bool TComReferencePictureSet::getDeltaPocMSBPresentFlag(int);
113:    Int TComReferencePictureSet::getDeltaRIdxMinus1();
115:    Int TComReferencePictureSet::getDeltaRPS();
111:    Bool TComReferencePictureSet::getInterRPSPrediction();
117:    Int TComReferencePictureSet::getNumRefIdc();
108:    Int TComReferencePictureSet::getNumberOfLongtermPictures();
104:    Int TComReferencePictureSet::getNumberOfNegativePictures();
106:    Int TComReferencePictureSet::getNumberOfPositivePictures();
85:     Int TComReferencePictureSet::getPocLSBLT(int);
88:     void TComReferencePictureSet::setDeltaPocMSBCycleLT(int, int);
90:     void TComReferencePictureSet::setDeltaPocMSBPresentFlag(int, bool);
112:    void TComReferencePictureSet::setDeltaRIdxMinus1(int);
114:    void TComReferencePictureSet::setDeltaRPS(int);
110:    void TComReferencePictureSet::setInterRPSPrediction(bool);
116:    void TComReferencePictureSet::setNumRefIdc(int);
107:    void TComReferencePictureSet::setNumberOfLongtermPictures(int);
103:    void TComReferencePictureSet::setNumberOfNegativePictures(int);
105:    void TComReferencePictureSet::setNumberOfPositivePictures(int);
86:     void TComReferencePictureSet::setPocLSBLT(int, int);
823:    Int TComSPS::getAMPAcc(unsigned int);
829:    Int TComSPS::getBitDepthC();
827:    Int TComSPS::getBitDepthY();
799:    UInt TComSPS::getBitsForPOC();
757:    Int TComSPS::getChromaFormatIdc();
769:    Window &TComSPS::getConformanceWindow();
783:    Int TComSPS::getLog2DiffMaxMinCodingBlockSize() const;
781:    Int TComSPS::getLog2MinCodingBlockSize() const;
814:    Bool TComSPS::getLongTermRefsPresent();
775:    UInt TComSPS::getLtRefPicPocLsbSps(unsigned int);
791:    UInt TComSPS::getMaxCUDepth();
789:    UInt TComSPS::getMaxCUHeight();
787:    UInt TComSPS::getMaxCUWidth();
856:    UInt TComSPS::getMaxDecPicBuffering(unsigned int);
858:    UInt TComSPS::getMaxLatencyIncrease(unsigned int);
838:    UInt TComSPS::getMaxTLayers();
820:    UInt TComSPS::getMaxTrSize();
772:    UInt TComSPS::getNumLongTermRefPicSPS();
811:    Int TComSPS::getNumReorderPics(unsigned int);
845:    UInt TComSPS::getPCMBitDepthChroma();
843:    UInt TComSPS::getPCMBitDepthLuma();
848:    Bool TComSPS::getPCMFilterDisableFlag();
795:    UInt TComSPS::getPCMLog2MaxSize();
797:    UInt TComSPS::getPCMLog2MinSize();
869:    TComPTL *TComSPS::getPTL();
767:    UInt TComSPS::getPicHeightInLumaSamples();
765:    UInt TComSPS::getPicWidthInLumaSamples();
833:    Int TComSPS::getQpBDOffsetC();
831:    Int TComSPS::getQpBDOffsetY();
803:    UInt TComSPS::getQuadtreeTULog2MaxSize();
805:    UInt TComSPS::getQuadtreeTULog2MinSize();
808:    UInt TComSPS::getQuadtreeTUMaxDepthInter();
809:    UInt TComSPS::getQuadtreeTUMaxDepthIntra();
813:    TComRPSList *TComSPS::getRPSList();
755:    Int TComSPS::getSPSId();
850:    Bool TComSPS::getScalingListFlag();
852:    Bool TComSPS::getScalingListPresentFlag();
816:    Bool TComSPS::getTMVPFlagsPresent();
841:    Bool TComSPS::getTemporalIdNestingFlag();
800:    Bool TComSPS::getUseAMP();
793:    Bool TComSPS::getUsePCM();
836:    Bool TComSPS::getUseSAO();
862:    Bool TComSPS::getUseStrongIntraSmoothing();
778:    Bool TComSPS::getUsedByCurrPicLtSPSFlag(int);
753:    Int TComSPS::getVPSId();
866:    TComVUI *TComSPS::getVuiParameters();
864:    Bool TComSPS::getVuiParametersPresentFlag();
760:    Int TComSPS::getWinUnitX(int);
761:    Int TComSPS::getWinUnitY(int);
824:    void TComSPS::setAMPAcc(unsigned int, int);
830:    void TComSPS::setBitDepthC(int);
828:    void TComSPS::setBitDepthY(int);
770:    void TComSPS::setConformanceWindow(Window&);
784:    void TComSPS::setLog2DiffMaxMinCodingBlockSize(int);
782:    void TComSPS::setLog2MinCodingBlockSize(int);
776:    void TComSPS::setLtRefPicPocLsbSps(unsigned int, unsigned int);
790:    void TComSPS::setMaxCUDepth(unsigned int);
788:    void TComSPS::setMaxCUHeight(unsigned int);
786:    void TComSPS::setMaxCUWidth(unsigned int);
857:    void TComSPS::setMaxDecPicBuffering(unsigned int, unsigned int);
839:    void TComSPS::setMaxTLayers(unsigned int);
819:    void TComSPS::setMaxTrSize(unsigned int);
773:    void TComSPS::setNumLongTermRefPicSPS(unsigned int);
810:    void TComSPS::setNumReorderPics(int, unsigned int);
846:    void TComSPS::setPCMBitDepthChroma(unsigned int);
844:    void TComSPS::setPCMBitDepthLuma(unsigned int);
847:    void TComSPS::setPCMFilterDisableFlag(bool);
794:    void TComSPS::setPCMLog2MaxSize(unsigned int);
796:    void TComSPS::setPCMLog2MinSize(unsigned int);
766:    void TComSPS::setPicHeightInLumaSamples(unsigned int);
764:    void TComSPS::setPicWidthInLumaSamples(unsigned int);
834:    void TComSPS::setQpBDOffsetC(int);
832:    void TComSPS::setQpBDOffsetY(int);
802:    void TComSPS::setQuadtreeTULog2MaxSize(unsigned int);
804:    void TComSPS::setQuadtreeTULog2MinSize(unsigned int);
806:    void TComSPS::setQuadtreeTUMaxDepthInter(unsigned int);
807:    void TComSPS::setQuadtreeTUMaxDepthIntra(unsigned int);
851:    void TComSPS::setScalingListFlag(bool);
853:    void TComSPS::setScalingListPresentFlag(bool);
817:    void TComSPS::setTMVPFlagsPresent(bool);
842:    void TComSPS::setTemporalIdNestingFlag(bool);
801:    void TComSPS::setUseAMP(bool);
792:    void TComSPS::setUsePCM(bool);
835:    void TComSPS::setUseSAO(bool);
861:    void TComSPS::setUseStrongIntraSmoothing(bool);
779:    void TComSPS::setUsedByCurrPicLtSPSFlag(int, bool);
865:    void TComSPS::setVuiParametersPresentFlag(bool);
157:    UInt TComScalingList::getRefMatrixId(unsigned int, unsigned int);
154:    Int *TComScalingList::getScalingListAddress(unsigned int, unsigned int);
162:    Int TComScalingList::getScalingListDC(unsigned int, unsigned int);
156:    void TComScalingList::setRefMatrixId(unsigned int, unsigned int, unsigned int);
1386:   void TComSlice::addTileLocation(unsigned int);
1219:   Int TComSlice::getAssociatedIRAPPOC();
1221:   NalUnitType TComSlice::getAssociatedIRAPType();
1243:   UInt TComSlice::getColFromL0Flag();
1244:   UInt TComSlice::getColRefIdx();
1235:   Int TComSlice::getDeblockingFilterBetaOffsetDiv2();
1233:   Bool TComSlice::getDeblockingFilterDisable();
1234:   Bool TComSlice::getDeblockingFilterOverrideFlag();
1236:   Int TComSlice::getDeblockingFilterTcOffsetDiv2();
1225:   Bool TComSlice::getDependentSliceSegmentFlag() const;
1242:   Int TComSlice::getDepth();
1407:   Bool TComSlice::getEnableTMVPFlag();
1370:   Bool TComSlice::getFinalized();
1259:   Bool TComSlice::getIdrPicFlag();
1404:   Bool TComSlice::getLFCrossSliceBoundaryFlag();
1294:   const Double *TComSlice::getLambdas() const;
1217:   Int TComSlice::getLastIDR();
1251:   Int TComSlice::getList1IdxToList0Idx(int);
1329:   UInt TComSlice::getMaxNumMergeCand();
1249:   Bool TComSlice::getMvdL1ZeroFlag();
1257:   NalUnitType TComSlice::getNalUnitType() const;
1333:   Bool TComSlice::getNoOutputPriorPicsFlag();
1336:   Bool TComSlice::getNoRaslOutputFlag();
1400:   Int TComSlice::getNumEntryPointOffsets();
1238:   Int TComSlice::getNumRefIdx(RefPicList);
1223:   Int TComSlice::getPOC();
1193:   TComPPS *TComSlice::getPPS();
1239:   TComPic *TComSlice::getPic();
1203:   Bool TComSlice::getPicOutputFlag();
1209:   TComReferencePictureSet *TComSlice::getRPS();
1213:   Int TComSlice::getRPSidx();
1241:   Int TComSlice::getRefPOC(RefPicList, int);
1240:   TComPic *TComSlice::getRefPic(RefPicList, int);
1215:   TComRefPicListModification *TComSlice::getRefPicListModification();
1190:   TComSPS *TComSlice::getSPS();
1205:   Bool TComSlice::getSaoEnabledFlag();
1207:   Bool TComSlice::getSaoEnabledFlagChroma();
1394:   TComScalingList *TComSlice::getScalingList();
1345:   UInt TComSlice::getSliceArgument();
1366:   UInt TComSlice::getSliceBits();
1349:   UInt TComSlice::getSliceCurEndCUAddr();
1347:   UInt TComSlice::getSliceCurStartCUAddr();
1351:   UInt TComSlice::getSliceIdx();
1343:   UInt TComSlice::getSliceMode();
1224:   Int TComSlice::getSliceQp();
1228:   Int TComSlice::getSliceQpBase();
1231:   Int TComSlice::getSliceQpDeltaCb();
1232:   Int TComSlice::getSliceQpDeltaCr();
1356:   UInt TComSlice::getSliceSegmentArgument();
1368:   UInt TComSlice::getSliceSegmentBits();
1360:   UInt TComSlice::getSliceSegmentCurEndCUAddr();
1358:   UInt TComSlice::getSliceSegmentCurStartCUAddr();
1354:   UInt TComSlice::getSliceSegmentMode();
1222:   SliceType TComSlice::getSliceType();
1392:   UInt *TComSlice::getSubstreamSizes();
1311:   UInt TComSlice::getTLayer();
1401:   Bool TComSlice::getTemporalLayerNonReferenceFlag();
1387:   UInt TComSlice::getTileLocation(int);
1383:   UInt TComSlice::getTileLocationCount();
1390:   UInt TComSlice::getTileOffstForMultES();
1260:   Bool TComSlice::isIRAP() const;
1290:   Bool TComSlice::isInterB();
1291:   Bool TComSlice::isInterP();
1289:   Bool TComSlice::isIntra();
1362:   Bool TComSlice::isNextSlice();
1364:   Bool TComSlice::isNextSliceSegment();
1254:   Bool TComSlice::isReferenceNalu();
1253:   Bool TComSlice::isReferenced();
1218:   void TComSlice::setAssociatedIRAPPOC(int);
1220:   void TComSlice::setAssociatedIRAPType(NalUnitType);
1397:   void TComSlice::setCabacInitFlag(bool);
1286:   void TComSlice::setCheckLDC(bool);
1284:   void TComSlice::setColFromL0Flag(unsigned int);
1273:   void TComSlice::setDeblockingFilterBetaOffsetDiv2(int);
1271:   void TComSlice::setDeblockingFilterDisable(bool);
1272:   void TComSlice::setDeblockingFilterOverrideFlag(bool);
1274:   void TComSlice::setDeblockingFilterTcOffsetDiv2(int);
1226:   void TComSlice::setDependentSliceSegmentFlag(bool);
1280:   void TComSlice::setDepth(int);
1406:   void TComSlice::setEnableTMVPFlag(bool);
1369:   void TComSlice::setFinalized(bool);
1403:   void TComSlice::setLFCrossSliceBoundaryFlag(bool);
1293:   void TComSlice::setLambdas(double const*);
1216:   void TComSlice::setLastIDR(int);
1328:   void TComSlice::setMaxNumMergeCand(unsigned int);
1287:   void TComSlice::setMvdL1ZeroFlag(bool);
1256:   void TComSlice::setNalUnitType(NalUnitType);
1361:   void TComSlice::setNextSlice(bool);
1363:   void TComSlice::setNextSliceSegment(bool);
1332:   void TComSlice::setNoOutputPriorPicsFlag(bool);
1335:   void TComSlice::setNoRaslOutputFlag(bool);
1399:   void TComSlice::setNumEntryPointOffsets(int);
1278:   void TComSlice::setNumRefIdx(RefPicList, int);
1255:   void TComSlice::setPOC(int);
1192:   void TComSlice::setPPS(TComPPS*);
1279:   void TComSlice::setPic(TComPic*);
1202:   void TComSlice::setPicOutputFlag(bool);
1208:   void TComSlice::setRPS(TComReferencePictureSet*);
1212:   void TComSlice::setRPSidx(int);
1252:   void TComSlice::setReferenced(bool);
1189:   void TComSlice::setSPS(TComSPS*);
1204:   void TComSlice::setSaoEnabledFlag(bool);
1206:   void TComSlice::setSaoEnabledFlagChroma(bool);
1393:   void TComSlice::setScalingList(TComScalingList*);
1344:   void TComSlice::setSliceArgument(unsigned int);
1365:   void TComSlice::setSliceBits(unsigned int);
1348:   void TComSlice::setSliceCurEndCUAddr(unsigned int);
1346:   void TComSlice::setSliceCurStartCUAddr(unsigned int);
1350:   void TComSlice::setSliceIdx(unsigned int);
1342:   void TComSlice::setSliceMode(unsigned int);
1264:   void TComSlice::setSliceQp(int);
1266:   void TComSlice::setSliceQpBase(int);
1268:   void TComSlice::setSliceQpDelta(int);
1269:   void TComSlice::setSliceQpDeltaCb(int);
1270:   void TComSlice::setSliceQpDeltaCr(int);
1355:   void TComSlice::setSliceSegmentArgument(unsigned int);
1367:   void TComSlice::setSliceSegmentBits(unsigned int);
1359:   void TComSlice::setSliceSegmentCurEndCUAddr(unsigned int);
1357:   void TComSlice::setSliceSegmentCurStartCUAddr(unsigned int);
1353:   void TComSlice::setSliceSegmentMode(unsigned int);
1263:   void TComSlice::setSliceType(SliceType);
1312:   void TComSlice::setTLayer(unsigned int);
1402:   void TComSlice::setTemporalLayerNonReferenceFlag(bool);
1384:   void TComSlice::setTileLocation(int, unsigned int);
1382:   void TComSlice::setTileLocationCount(unsigned int);
1389:   void TComSlice::setTileOffstForMultES(unsigned int);
1196:   void TComSlice::setTrQuant(TComTrQuant*);
422:    void TComVPS::createHrdParamBuffer();
432:    Bool TComVPS::getCprmsPresentFlag(unsigned int);
430:    UInt TComVPS::getHrdOpSetIdx(unsigned int);
429:    TComHRD *TComVPS::getHrdParameters(unsigned int);
464:    Bool TComVPS::getLayerIdIncludedFlag(unsigned int, unsigned int);
451:    UInt TComVPS::getMaxDecPicBuffering(unsigned int);
454:    UInt TComVPS::getMaxLatencyIncrease(unsigned int);
459:    UInt TComVPS::getMaxNuhReservedZeroLayerId();
462:    UInt TComVPS::getMaxOpSets();
438:    UInt TComVPS::getMaxTLayers();
456:    UInt TComVPS::getNumHrdParameters();
448:    UInt TComVPS::getNumReorderPics(unsigned int);
467:    TComPTL *TComVPS::getPTL();
444:    Bool TComVPS::getTemporalNestingFlag();
468:    TimingInfo *TComVPS::getTimingInfo();
435:    Int TComVPS::getVPSId();
431:    void TComVPS::setHrdOpSetIdx(unsigned int, unsigned int);
465:    void TComVPS::setLayerIdIncludedFlag(bool, unsigned int, unsigned int);
463:    void TComVPS::setMaxOpSets(unsigned int);
457:    void TComVPS::setNumHrdParameters(unsigned int);
585:    Int TComVUI::getAspectRatioIdc();
582:    Bool TComVUI::getAspectRatioInfoPresentFlag();
645:    Bool TComVUI::getBitstreamRestrictionFlag();
621:    Bool TComVUI::getChromaLocInfoPresentFlag();
627:    Int TComVUI::getChromaSampleLocTypeBottomField();
624:    Int TComVUI::getChromaSampleLocTypeTopField();
609:    Bool TComVUI::getColourDescriptionPresentFlag();
612:    Int TComVUI::getColourPrimaries();
639:    Window &TComVUI::getDefaultDisplayWindow();
633:    Bool TComVUI::getFieldSeqFlag();
636:    Bool TComVUI::getFrameFieldInfoPresentFlag();
671:    TComHRD *TComVUI::getHrdParameters();
642:    Bool TComVUI::getHrdParametersPresentFlag();
665:    Int TComVUI::getLog2MaxMvLengthHorizontal();
668:    Int TComVUI::getLog2MaxMvLengthVertical();
618:    Int TComVUI::getMatrixCoefficients();
662:    Int TComVUI::getMaxBitsPerMinCuDenom();
659:    Int TComVUI::getMaxBytesPerPicDenom();
657:    Int TComVUI::getMinSpatialSegmentationIdc();
651:    Bool TComVUI::getMotionVectorsOverPicBoundariesFlag();
630:    Bool TComVUI::getNeutralChromaIndicationFlag();
597:    Bool TComVUI::getOverscanAppropriateFlag();
594:    Bool TComVUI::getOverscanInfoPresentFlag();
654:    Bool TComVUI::getRestrictedRefPicListsFlag();
591:    Int TComVUI::getSarHeight();
588:    Int TComVUI::getSarWidth();
648:    Bool TComVUI::getTilesFixedStructureFlag();
672:    TimingInfo *TComVUI::getTimingInfo();
615:    Int TComVUI::getTransferCharacteristics();
603:    Int TComVUI::getVideoFormat();
606:    Bool TComVUI::getVideoFullRangeFlag();
600:    Bool TComVUI::getVideoSignalTypePresentFlag();
586:    void TComVUI::setAspectRatioIdc(int);
583:    void TComVUI::setAspectRatioInfoPresentFlag(bool);
646:    void TComVUI::setBitstreamRestrictionFlag(bool);
622:    void TComVUI::setChromaLocInfoPresentFlag(bool);
628:    void TComVUI::setChromaSampleLocTypeBottomField(int);
625:    void TComVUI::setChromaSampleLocTypeTopField(int);
610:    void TComVUI::setColourDescriptionPresentFlag(bool);
613:    void TComVUI::setColourPrimaries(int);
640:    void TComVUI::setDefaultDisplayWindow(Window&);
634:    void TComVUI::setFieldSeqFlag(bool);
637:    void TComVUI::setFrameFieldInfoPresentFlag(bool);
643:    void TComVUI::setHrdParametersPresentFlag(bool);
666:    void TComVUI::setLog2MaxMvLengthHorizontal(int);
669:    void TComVUI::setLog2MaxMvLengthVertical(int);
619:    void TComVUI::setMatrixCoefficients(int);
663:    void TComVUI::setMaxBitsPerMinCuDenom(int);
660:    void TComVUI::setMaxBytesPerPicDenom(int);
658:    void TComVUI::setMinSpatialSegmentationIdc(int);
652:    void TComVUI::setMotionVectorsOverPicBoundariesFlag(bool);
631:    void TComVUI::setNeutralChromaIndicationFlag(bool);
598:    void TComVUI::setOverscanAppropriateFlag(bool);
595:    void TComVUI::setOverscanInfoPresentFlag(bool);
592:    void TComVUI::setSarHeight(int);
589:    void TComVUI::setSarWidth(int);
649:    void TComVUI::setTilesFixedStructureFlag(bool);
616:    void TComVUI::setTransferCharacteristics(int);
604:    void TComVUI::setVideoFormat(int);
607:    void TComVUI::setVideoFullRangeFlag(bool);
601:    void TComVUI::setVideoSignalTypePresentFlag(bool);
391:    Int TimingInfo::getNumTicksPocDiffOneMinus1();
383:    UInt TimingInfo::getNumUnitsInTick();
388:    Bool TimingInfo::getPocProportionalToTimingFlag();
386:    UInt TimingInfo::getTimeScale();
380:    Bool TimingInfo::getTimingInfoPresentFlag();
392:    void TimingInfo::setNumTicksPocDiffOneMinus1(int);
389:    void TimingInfo::setPocProportionalToTimingFlag(bool);
379:    void TimingInfo::setTimingInfoPresentFlag(bool);
480:    void Window::Window();
496:    Int Window::getWindowBottomOffset() const;
488:    Bool Window::getWindowEnabledFlag() const;
490:    Int Window::getWindowLeftOffset() const;
492:    Int Window::getWindowRightOffset() const;
494:    Int Window::getWindowTopOffset() const;

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComTrQuant.h:
195:    Int TComTrQuant::getQpDelta(int);
196:    Int *TComTrQuant::getSliceNSamples();
197:    Double *TComTrQuant::getSliceSumC();
153:    void TComTrQuant::selectLambda(TextType);
152:    void TComTrQuant::setLambdas(double const*);
181:    void TComTrQuant::setUseScalingList(bool);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TComYuv.h:
75:     Int TComYuv::getAddrOffset(unsigned int, unsigned int);
83:     Int TComYuv::getAddrOffset(unsigned int, unsigned int, unsigned int);
176:    UInt TComYuv::getCStride();
161:    Pel *TComYuv::getCbAddr();
166:    Pel *TComYuv::getCbAddr(unsigned int);
162:    Pel *TComYuv::getCrAddr();
167:    Pel *TComYuv::getCrAddr(unsigned int);
160:    Pel *TComYuv::getLumaAddr();
165:    Pel *TComYuv::getLumaAddr(unsigned int);
170:    Pel *TComYuv::getLumaAddr(unsigned int, unsigned int);
175:    UInt TComYuv::getStride();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibCommon/TypeDef.h:
330:    SAOOffset &SAOBlkParam::operator[](int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/../TLibCommon/CommonDef.h:
134:    double Clip3<double>(double, double, double);
134:    int Clip3<int>(int, int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/../TLibCommon/TComPic.h:
108:    TComPicYuv *TComPic::getPicYuvOrg();
109:    TComPicYuv *TComPic::getPicYuvRec();
104:    TComSlice *TComPic::getSlice(int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/../TLibCommon/TComPicSym.h:
117:    TComSlice *TComPicSym::getSlice(unsigned int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/../TLibCommon/TComPicYuv.h:
115:    Int TComPicYuv::getCStride();
131:    Pel *TComPicYuv::getCbAddr();
132:    Pel *TComPicYuv::getCrAddr();
112:    Int TComPicYuv::getHeight();
130:    Pel *TComPicYuv::getLumaAddr();
114:    Int TComPicYuv::getStride();
111:    Int TComPicYuv::getWidth();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/../TLibCommon/TComSlice.h:
994:    void TComPPS::setUseWP(bool);
995:    void TComPPS::setWPBiPred(bool);
1238:   Int TComSlice::getNumRefIdx(RefPicList);
1193:   TComPPS *TComSlice::getPPS();
1239:   TComPic *TComSlice::getPic();
1240:   TComPic *TComSlice::getRefPic(RefPicList, int);
1291:   Bool TComSlice::isInterP();
1378:   void TComSlice::setWpAcDcParam(wpACDCParam*);
1371:   void TComSlice::setWpScaling(wpScalingParam (*) [16][3]);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/NALwrite.cpp:
146:    void copyNaluData(OutputNALUnit&, OutputNALUnit const&);
64:     void write(std::ostream&, OutputNALUnit&);
49:     void writeNalUnitHeader(std::ostream&, OutputNALUnit&);
137:    void writeRBSPTrailingBits(TComOutputBitstream&);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/NALwrite.h:
77:     void NALUnitEBSP::NALUnitEBSP(OutputNALUnit&);
56:     void OutputNALUnit::OutputNALUnit(NalUnitType, unsigned int, unsigned int);
64:     OutputNALUnit &OutputNALUnit::operator=(NALUnit const&);
49:     void OutputNALUnit::~OutputNALUnit();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/SEIwrite.cpp:
157:    void SEIWriter::writeSEImessage(TComBitIf&, SEI const&, TComSPS*);
575:    void SEIWriter::xWriteByteAlign();
257:    void SEIWriter::xWriteSEIActiveParameterSets(SEIActiveParameterSets const&);
289:    void SEIWriter::xWriteSEIBufferingPeriod(SEIBufferingPeriod const&, TComSPS*);
229:    void SEIWriter::xWriteSEIDecodedPictureHash(SEIDecodedPictureHash const&);
273:    void SEIWriter::xWriteSEIDecodingUnitInfo(SEIDecodingUnitInfo const&, TComSPS*);
486:    void SEIWriter::xWriteSEIDisplayOrientation(SEIDisplayOrientation const&);
374:    void SEIWriter::xWriteSEIFramePacking(SEIFramePacking const&);
506:    void SEIWriter::xWriteSEIGradualDecodingRefreshInfo(SEIGradualDecodingRefreshInfo const&);
326:    void SEIWriter::xWriteSEIPictureTiming(SEIPictureTiming const&, TComSPS*);
367:    void SEIWriter::xWriteSEIRecoveryPoint(SEIRecoveryPoint const&);
512:    void SEIWriter::xWriteSEISOPDescription(SEISOPDescription const&);
533:    void SEIWriter::xWriteSEIScalableNesting(TComBitIf&, SEIScalableNesting const&, TComSPS*);
499:    void SEIWriter::xWriteSEITemporalLevel0Index(SEITemporalLevel0Index const&);
409:    void SEIWriter::xWriteSEIToneMappingInfo(SEIToneMappingInfo const&);
102:    void SEIWriter::xWriteSEIpayloadData(TComBitIf&, SEI const&, TComSPS*);
212:    void SEIWriter::xWriteSEIuserDataUnregistered(SEIuserDataUnregistered const&);
        static void _GLOBAL__sub_I_SEIwrite.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/SEIwrite.h:
46:     void SEIWriter::SEIWriter();
47:     void SEIWriter::~SEIWriter();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/SyntaxElementWriter.cpp:
96:     void SyntaxElementWriter::xWriteCode(unsigned int, unsigned int);
127:    void SyntaxElementWriter::xWriteFlag(unsigned int);
119:    void SyntaxElementWriter::xWriteSvlc(int);
102:    void SyntaxElementWriter::xWriteUvlc(unsigned int);
        static void _GLOBAL__sub_I_SyntaxElementWriter.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/SyntaxElementWriter.h:
73:     void SyntaxElementWriter::SyntaxElementWriter();
78:     void SyntaxElementWriter::setBitstream(TComBitIf*);
91:     UInt SyntaxElementWriter::xConvertToUInt(int);
76:     void SyntaxElementWriter::~SyntaxElementWriter();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncAnalyze.cpp:
        static void _GLOBAL__sub_I_TEncAnalyze.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncAnalyze.h:
69:     void TEncAnalyze::TEncAnalyze();
72:     void TEncAnalyze::addResult(double, double, double, double);
85:     Double TEncAnalyze::getBits();
86:     UInt TEncAnalyze::getNumPic();
83:     Double TEncAnalyze::getPsnrU();
84:     Double TEncAnalyze::getPsnrV();
82:     Double TEncAnalyze::getPsnrY();
90:     void TEncAnalyze::printOut(char);
118:    void TEncAnalyze::printOutInterlaced(char, double);
88:     void TEncAnalyze::setFrmRate(double);
70:     void TEncAnalyze::~TEncAnalyze();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncBinCoder.h:
49:     void TEncBinIf::TEncBinIf();
72:     TEncBinCABAC *TEncBinIf::getTEncBinCABAC();
74:     void TEncBinIf::~TEncBinIf();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp:
46:     void TEncBinCABAC::TEncBinCABAC();
145:    void TEncBinCABAC::copyState(TEncBinIf*);
184:    void TEncBinCABAC::encodeBin(unsigned int, ContextModel&);
230:    void TEncBinCABAC::encodeBinEP(unsigned int);
291:    void TEncBinCABAC::encodeBinTrm(unsigned int);
255:    void TEncBinCABAC::encodeBinsEP(unsigned int, int);
128:    void TEncBinCABAC::encodePCMAlignBits();
78:     void TEncBinCABAC::finish();
107:    void TEncBinCABAC::flush();
173:    UInt TEncBinCABAC::getNumWrittenBits();
59:     void TEncBinCABAC::init(TComBitIf*);
120:    void TEncBinCABAC::resetBac();
158:    void TEncBinCABAC::resetBits();
69:     void TEncBinCABAC::start();
316:    void TEncBinCABAC::testAndWriteOut();
64:     void TEncBinCABAC::uninit();
327:    void TEncBinCABAC::writeOut();
140:    void TEncBinCABAC::xWritePCMCode(unsigned int, unsigned int);
55:     void TEncBinCABAC::~TEncBinCABAC();
        static void _GLOBAL__sub_I_TEncBinCoderCABAC.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncBinCoderCABAC.h:
76:     UInt TEncBinCABAC::getBinsCoded();
73:     TEncBinCABAC *TEncBinCABAC::getTEncBinCABAC();
77:     void TEncBinCABAC::setBinCountingEnableFlag(bool);
75:     void TEncBinCABAC::setBinsCoded(unsigned int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncBinCoderCABACCounter.cpp:
47:     void TEncBinCABACCounter::TEncBinCABACCounter();
72:     void TEncBinCABACCounter::encodeBin(unsigned int, ContextModel&);
85:     void TEncBinCABACCounter::encodeBinEP(unsigned int);
108:    void TEncBinCABACCounter::encodeBinTrm(unsigned int);
97:     void TEncBinCABACCounter::encodeBinsEP(unsigned int, int);
55:     void TEncBinCABACCounter::finish();
61:     UInt TEncBinCABACCounter::getNumWrittenBits();
51:     void TEncBinCABACCounter::~TEncBinCABACCounter();
        static void _GLOBAL__sub_I_TEncBinCoderCABACCounter.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncCavlc.cpp:
1353:   Bool TComScalingList::checkPredMode(unsigned int, unsigned int);
70:     void TEncCavlc::TEncCavlc();
1091:   void TEncCavlc::codeCUTransquantBypassFlag(TComDataCU*, unsigned int);
1182:   void TEncCavlc::codeCoeffNxN(TComDataCU*, int*, unsigned int, unsigned int, unsigned int, unsigned int, TextType);
90:     void TEncCavlc::codeDFFlag(unsigned int, char const*);
94:     void TEncCavlc::codeDFSvlc(int, char const*);
1170:   void TEncCavlc::codeDeltaQP(TComDataCU*, unsigned int);
319:    void TEncCavlc::codeHrdParameters(TComHRD*, bool, unsigned int);
1140:   void TEncCavlc::codeIPCMInfo(TComDataCU*, unsigned int);
1155:   void TEncCavlc::codeInterDir(TComDataCU*, unsigned int);
1086:   void TEncCavlc::codeInterModeFlag(TComDataCU*, unsigned int, unsigned int, unsigned int);
1150:   void TEncCavlc::codeIntraDirChroma(TComDataCU*, unsigned int);
1145:   void TEncCavlc::codeIntraDirLumaAng(TComDataCU*, unsigned int, bool);
1061:   void TEncCavlc::codeMVPIdx(TComDataCU*, unsigned int, RefPicList);
1076:   void TEncCavlc::codeMergeFlag(TComDataCU*, unsigned int);
1081:   void TEncCavlc::codeMergeIndex(TComDataCU*, unsigned int);
1165:   void TEncCavlc::codeMvd(TComDataCU*, unsigned int, RefPicList);
156:    void TEncCavlc::codePPS(TComPPS*);
920:    void TEncCavlc::codePTL(TComPTL*, bool, int);
1066:   void TEncCavlc::codePartSize(TComDataCU*, unsigned int, unsigned int);
1071:   void TEncCavlc::codePredMode(TComDataCU*, unsigned int);
958:    void TEncCavlc::codeProfileTier(ProfileTierLevel*);
1111:   void TEncCavlc::codeQtCbf(TComDataCU*, unsigned int, TextType, unsigned int);
1121:   void TEncCavlc::codeQtCbfZero(TComDataCU*, TextType, unsigned int);
1116:   void TEncCavlc::codeQtRootCbf(TComDataCU*, unsigned int);
1125:   void TEncCavlc::codeQtRootCbfZero(TComDataCU*);
1160:   void TEncCavlc::codeRefFrmIdx(TComDataCU*, unsigned int, RefPicList);
392:    void TEncCavlc::codeSPS(TComSPS*);
1282:   void TEncCavlc::codeScalingList(TComScalingList*);
99:     void TEncCavlc::codeShortTermRefPicSet(TComSPS*, TComReferencePictureSet*, bool, int);
1096:   void TEncCavlc::codeSkipFlag(TComDataCU*, unsigned int);
1057:   void TEncCavlc::codeSliceFinish();
579:    void TEncCavlc::codeSliceHeader(TComSlice*);
1101:   void TEncCavlc::codeSplitFlag(TComDataCU*, unsigned int, unsigned int);
1053:   void TEncCavlc::codeTerminatingBit(unsigned int);
983:    void TEncCavlc::codeTilesWPPEntryPoint(TComSlice*);
1130:   void TEncCavlc::codeTransformSkipFlags(TComDataCU*, unsigned int, unsigned int, unsigned int, TextType);
1106:   void TEncCavlc::codeTransformSubdivFlag(unsigned int, unsigned int);
504:    void TEncCavlc::codeVPS(TComVPS*);
233:    void TEncCavlc::codeVUI(TComVUI*, TComSPS*);
1187:   void TEncCavlc::estBit(estBitsSbacStruct*, int, int, TextType);
1339:   Bool TEncCavlc::findMatchingLTRP(TComSlice*, unsigned int*, int, bool);
85:     void TEncCavlc::resetEntropy();
1201:   void TEncCavlc::xCodePredWeightTable(TComSlice*);
1311:   void TEncCavlc::xCodeScalingList(TComScalingList*, unsigned int, unsigned int);
76:     void TEncCavlc::~TEncCavlc();
        static void _GLOBAL__sub_I_TEncCavlc.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncCavlc.h:
98:     void TEncCavlc::codeSAOBlkParam(SAOBlkParam&, bool*, bool, bool, bool);
77:     void TEncCavlc::determineCabacInitIdx();
84:     UInt TEncCavlc::getCoeffCost();
83:     UInt TEncCavlc::getNumberOfWrittenBits();
81:     void TEncCavlc::resetBits();
82:     void TEncCavlc::resetCoeffCost();
79:     void TEncCavlc::setBitstream(TComBitIf*);
80:     void TEncCavlc::setSlice(TComSlice*);
132:    void TEncCavlc::updateContextTables(SliceType, int);
131:    void TEncCavlc::updateContextTables(SliceType, int, bool);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncCfg.h:
71:     void GOPEntry::GOPEntry();
315:    void TEncCfg::TEncCfg();
640:    Int TEncCfg::getActiveParameterSetsSEIEnabled();
645:    Int TEncCfg::getAspectRatioIdc();
643:    Bool TEncCfg::getAspectRatioInfoPresentFlag();
685:    Bool TEncCfg::getBitstreamRestrictionFlag();
516:    Int TEncCfg::getBufferingPeriodSEIEnabled();
629:    Bool TEncCfg::getCUTransquantBypassFlagForceValue();
669:    Bool TEncCfg::getChromaLocInfoPresentFlag();
673:    Int TEncCfg::getChromaSampleLocTypeBottomField();
671:    Int TEncCfg::getChromaSampleLocTypeTopField();
661:    Bool TEncCfg::getColourDescriptionPresentFlag();
663:    Int TEncCfg::getColourPrimaries();
422:    Bool TEncCfg::getDeblockingFilterMetric();
514:    Int TEncCfg::getDecodedPictureHashSEIEnabled();
402:    UInt TEncCfg::getDecodingRefreshType();
592:    Int TEncCfg::getDecodingUnitInfoSEIEnabled();
677:    Window &TEncCfg::getDefaultDisplayWindow();
475:    UInt TEncCfg::getDeltaQpRD();
586:    Int TEncCfg::getDisplayOrientationSEIAngle();
625:    Bool TEncCfg::getForceIntraQP();
679:    Bool TEncCfg::getFrameFieldInfoPresentFlag();
576:    Int TEncCfg::getFramePackingArrangementSEIEnabled();
580:    Int TEncCfg::getFramePackingArrangementSEIId();
584:    Int TEncCfg::getFramePackingArrangementSEIInterpretation();
582:    Int TEncCfg::getFramePackingArrangementSEIQuincunx();
578:    Int TEncCfg::getFramePackingArrangementSEIType();
392:    Int TEncCfg::getFrameRate();
396:    Int TEncCfg::getFramesToBeEncoded();
342:    GOPEntry TEncCfg::getGOPEntry(int);
403:    Int TEncCfg::getGOPSize();
590:    Int TEncCfg::getGradualDecodingRefreshInfoEnabled();
623:    Int TEncCfg::getInitialQP();
401:    UInt TEncCfg::getIntraPeriod();
619:    Bool TEncCfg::getLCULevelRC();
497:    Bool TEncCfg::getLFCrossTileBoundaryFlag();
398:    Double TEncCfg::getLambdaModifier(unsigned int) const;
697:    Int TEncCfg::getLog2MaxMvLengthHorizontal();
699:    Int TEncCfg::getLog2MaxMvLengthVertical();
419:    Int TEncCfg::getLoopFilterBetaOffset();
417:    Bool TEncCfg::getLoopFilterDisable();
418:    Bool TEncCfg::getLoopFilterOffsetInPPS();
420:    Int TEncCfg::getLoopFilterTcOffset();
667:    Int TEncCfg::getMatrixCoefficients();
695:    Int TEncCfg::getMaxBitsPerMinCuDenom();
693:    Int TEncCfg::getMaxBytesPerPicDenom();
430:    Int TEncCfg::getMaxCuDQPDepth();
404:    Int TEncCfg::getMaxDecPicBuffering(unsigned int);
429:    Int TEncCfg::getMaxDeltaQP();
604:    UInt TEncCfg::getMaxNumMergeCand();
691:    Int TEncCfg::getMinSpatialSegmentationIdc();
689:    Bool TEncCfg::getMotionVectorsOverPicBoundariesFlag();
675:    Bool TEncCfg::getNeutralChromaIndicationFlag();
501:    Int TEncCfg::getNumColumnsMinus1();
505:    Int TEncCfg::getNumRowsMinus1();
683:    Int TEncCfg::getNumTicksPocDiffOneMinus1();
653:    Bool TEncCfg::getOverscanAppropriateFlag();
651:    Bool TEncCfg::getOverscanInfoPresentFlag();
408:    Int TEncCfg::getPad(int);
518:    Int TEncCfg::getPictureTimingSEIEnabled();
681:    Bool TEncCfg::getPocProportionalToTimingFlag();
406:    Int TEncCfg::getQP();
432:    Int TEncCfg::getQPAdaptationRange();
411:    UInt TEncCfg::getQuadtreeTULog2MaxSize() const;
412:    UInt TEncCfg::getQuadtreeTULog2MinSize() const;
457:    Int TEncCfg::getRDpenalty();
520:    Int TEncCfg::getRecoveryPointSEIEnabled();
594:    Int TEncCfg::getSOPDescriptionSEIEnabled();
495:    Bool TEncCfg::getSaoLcuBoundary();
649:    Int TEncCfg::getSarHeight();
647:    Int TEncCfg::getSarWidth();
596:    Int TEncCfg::getScalableNestingSEIEnabled();
608:    Char *TEncCfg::getScalingListFile();
426:    Int TEncCfg::getSearchRange();
612:    Int TEncCfg::getSignHideFlag();
481:    Int TEncCfg::getSliceArgument();
480:    Int TEncCfg::getSliceMode();
486:    Int TEncCfg::getSliceSegmentArgument();
485:    Int TEncCfg::getSliceSegmentMode();
395:    Int TEncCfg::getSourceHeight();
394:    Int TEncCfg::getSourceWidth();
552:    Int TEncCfg::getTMISEICameraIsoSpeedIdc();
554:    Int TEncCfg::getTMISEICameraIsoSpeedValue();
530:    Int TEncCfg::getTMISEICodedDataBitDepth();
548:    Int *TEncCfg::getTMISEICodedPivotValue();
556:    Int TEncCfg::getTMISEIExposurIndexIdc();
558:    Int TEncCfg::getTMISEIExposurIndexValue();
564:    Int TEncCfg::getTMISEIExposureCompensationValueDenomIdc();
562:    Int TEncCfg::getTMISEIExposureCompensationValueNumerator();
560:    Int TEncCfg::getTMISEIExposureCompensationValueSignFlag();
568:    Int TEncCfg::getTMISEIExtendedRangeWhiteLevel();
574:    Int TEncCfg::getTMISEIExtendedWhiteLevelLumaCodeValue();
538:    Int TEncCfg::getTMISEIMaxValue();
536:    Int TEncCfg::getTMISEIMinValue();
534:    Int TEncCfg::getTMISEIModelID();
570:    Int TEncCfg::getTMISEINominalBlackLevelLumaCodeValue();
572:    Int TEncCfg::getTMISEINominalWhiteLevelLumaCodeValue();
546:    Int TEncCfg::getTMISEINumPivots();
566:    Int TEncCfg::getTMISEIRefScreenLuminanceWhite();
540:    Int TEncCfg::getTMISEISigmoidMidpoint();
542:    Int TEncCfg::getTMISEISigmoidWidth();
544:    Int *TEncCfg::getTMISEIStartOfCodedInterva();
532:    Int TEncCfg::getTMISEITargetBitDepth();
550:    Int *TEncCfg::getTMISEITargetPivotValue();
526:    Bool TEncCfg::getTMISEIToneMapCancelFlag();
524:    Int TEncCfg::getTMISEIToneMapId();
528:    Bool TEncCfg::getTMISEIToneMapPersistenceFlag();
610:    Int TEncCfg::getTMVPModeId();
615:    Int TEncCfg::getTargetBitrate();
588:    Int TEncCfg::getTemporalLevel0IndexSEIEnabled();
687:    Bool TEncCfg::getTilesFixedStructureFlag();
522:    Bool TEncCfg::getToneMappingInfoSEIEnabled();
665:    Int TEncCfg::getTransferCharacteristics();
627:    Bool TEncCfg::getTransquantBypassEnableFlag();
453:    Bool TEncCfg::getUseASR();
385:    Bool TEncCfg::getUseAdaptQpSelect();
431:    Bool TEncCfg::getUseAdaptiveQP();
461:    Bool TEncCfg::getUseCbfFastMode();
459:    Bool TEncCfg::getUseEarlyCU();
462:    Bool TEncCfg::getUseEarlySkipDetection();
460:    Bool TEncCfg::getUseFastDecisionForMerge();
458:    Bool TEncCfg::getUseFastEnc();
454:    Bool TEncCfg::getUseHADME();
455:    Bool TEncCfg::getUseRDOQ();
456:    Bool TEncCfg::getUseRDOQTS();
613:    Bool TEncCfg::getUseRateCtrl();
634:    Bool TEncCfg::getUseRecalculateQPAccordingToLambda();
606:    Int TEncCfg::getUseScalingListId();
472:    Bool TEncCfg::getUseTransformSkipFast();
632:    TComVPS *TEncCfg::getVPS();
657:    Int TEncCfg::getVideoFormat();
659:    Bool TEncCfg::getVideoFullRangeFlag();
655:    Bool TEncCfg::getVideoSignalTypePresentFlag();
641:    Bool TEncCfg::getVuiParametersPresentFlag();
510:    Int TEncCfg::getWaveFrontsynchro();
474:    Int *TEncCfg::getdQPs();
320:    void TEncCfg::~TEncCfg();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncCu.cpp:
225:    void TEncCu::compressCU(TComDataCU*&);
59:     void TEncCu::create(unsigned char, unsigned int, unsigned int);
271:    void TEncCu::deriveTestModeAMP(TComDataCU*&, PartSize, bool&, bool&, bool&, bool&);
107:    void TEncCu::destroy();
246:    void TEncCu::encodeCU(TComDataCU*);
861:    void TEncCu::finishCU(TComDataCU*, unsigned int, unsigned int);
200:    void TEncCu::init(TEncTop*);
1165:   Int TEncCu::updateLCUDataISlice(TComDataCU*, int, int, int);
1439:   void TEncCu::xCheckBestMode(TComDataCU*&, TComDataCU*&, unsigned int);
1467:   void TEncCu::xCheckDQP(TComDataCU*);
1398:   void TEncCu::xCheckIntraPCM(TComDataCU*&, TComDataCU*&);
1309:   void TEncCu::xCheckRDCostInter(TComDataCU*&, TComDataCU*&, PartSize, bool);
1344:   void TEncCu::xCheckRDCostIntra(TComDataCU*&, TComDataCU*&, PartSize);
1191:   void TEncCu::xCheckRDCostMerge2Nx2N(TComDataCU*&, TComDataCU*&, bool*);
350:    void TEncCu::xCompressCU(TComDataCU*&, TComDataCU*&, unsigned int, PartSize);
950:    Int TEncCu::xComputeQP(TComDataCU*, unsigned int);
1490:   void TEncCu::xCopyAMVPInfo(_AMVPInfo*, _AMVPInfo*);
1498:   void TEncCu::xCopyYuv2Pic(TComPic*, unsigned int, unsigned int, unsigned int, unsigned int, TComDataCU*, unsigned int, unsigned int);
1536:   void TEncCu::xCopyYuv2Tmp(unsigned int, unsigned int);
980:    void TEncCu::xEncodeCU(TComDataCU*, unsigned int, unsigned int);
1547:   void TEncCu::xFillPCMBuffer(TComDataCU*&, TComYuv*);
1622:   void TEncCu::xLcuCollectARLStats(TComDataCU*);
1594:   Int TEncCu::xTuCollectARLStats(int*, int*, int, double*, unsigned int*);
1071:   Int xCalcHADs8x8_ISlice(short*, int);
        static void _GLOBAL__sub_I_TEncCu.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncCu.h:
145:    Bool TEncCu::getdQPFlag();
116:    void TEncCu::setBitCounter(TComBitCounter*);
146:    void TEncCu::setdQPFlag(bool);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncEntropy.cpp:
613:    Int TEncEntropy::countNonZeroCoeffs(int*, unsigned int);
86:     void TEncEntropy::encodeCUTransquantBypassFlag(TComDataCU*, unsigned int, bool);
572:    void TEncEntropy::encodeCoeff(TComDataCU*, unsigned int, unsigned int, unsigned int, unsigned int, bool&);
600:    void TEncEntropy::encodeCoeffNxN(TComDataCU*, int*, unsigned int, unsigned int, unsigned int, unsigned int, TextType);
194:    void TEncEntropy::encodeIPCMInfo(TComDataCU*, unsigned int, bool);
463:    void TEncEntropy::encodeInterDirPU(TComDataCU*, unsigned int);
393:    void TEncEntropy::encodeIntraDirModeChroma(TComDataCU*, unsigned int, bool);
387:    void TEncEntropy::encodeIntraDirModeLuma(TComDataCU*, unsigned int, bool);
515:    void TEncEntropy::encodeMVPIdxPU(TComDataCU*, unsigned int, RefPicList);
119:    void TEncEntropy::encodeMergeFlag(TComDataCU*, unsigned int);
132:    void TEncEntropy::encodeMergeIndex(TComDataCU*, unsigned int, bool);
504:    void TEncEntropy::encodeMvdPU(TComDataCU*, unsigned int, RefPicList);
74:     void TEncEntropy::encodePPS(TComPPS*);
426:    void TEncEntropy::encodePUWise(TComDataCU*, unsigned int, bool);
179:    void TEncEntropy::encodePartSize(TComDataCU*, unsigned int, unsigned int, bool);
403:    void TEncEntropy::encodePredInfo(TComDataCU*, unsigned int, bool);
148:    void TEncEntropy::encodePredMode(TComDataCU*, unsigned int, bool);
550:    void TEncEntropy::encodeQP(TComDataCU*, unsigned int, bool);
525:    void TEncEntropy::encodeQtCbf(TComDataCU*, unsigned int, TextType, unsigned int);
540:    void TEncEntropy::encodeQtCbfZero(TComDataCU*, TextType, unsigned int);
535:    void TEncEntropy::encodeQtRootCbf(TComDataCU*, unsigned int);
544:    void TEncEntropy::encodeQtRootCbfZero(TComDataCU*);
480:    void TEncEntropy::encodeRefFrmIdxPU(TComDataCU*, unsigned int, RefPicList);
80:     void TEncEntropy::encodeSPS(TComSPS*);
628:    void TEncEntropy::encodeScalingList(TComScalingList*);
101:    void TEncEntropy::encodeSkipFlag(TComDataCU*, unsigned int, bool);
69:     void TEncEntropy::encodeSliceFinish();
51:     void TEncEntropy::encodeSliceHeader(TComSlice*);
163:    void TEncEntropy::encodeSplitFlag(TComDataCU*, unsigned int, unsigned int, bool);
62:     void TEncEntropy::encodeTerminatingBit(unsigned int);
57:     void TEncEntropy::encodeTilesWPPEntryPoint(TComSlice*);
530:    void TEncEntropy::encodeTransformSubdivFlag(unsigned int, unsigned int);
95:     void TEncEntropy::encodeVPS(TComVPS*);
606:    void TEncEntropy::estimateBit(estBitsSbacStruct*, int, int, TextType);
45:     void TEncEntropy::setEntropyCoder(TEncEntropyIf*, TComSlice*);
211:    void TEncEntropy::xEncodeTransform(TComDataCU*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool&);
        static void _GLOBAL__sub_I_TEncEntropy.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncEntropy.h:
136:    void TEncEntropy::determineCabacInitIdx();
186:    void TEncEntropy::encodeSAOBlkParam(SAOBlkParam&, bool*, bool, bool);
133:    UInt TEncEntropy::getNumberOfWrittenBits();
131:    void TEncEntropy::resetBits();
135:    void TEncEntropy::resetEntropy();
130:    void TEncEntropy::setBitstream(TComBitIf*);
174:    void TEncEntropy::updateContextTables(SliceType, int);
173:    void TEncEntropy::updateContextTables(SliceType, int, bool);
58:     void TEncEntropyIf::TEncEntropyIf();
116:    void TEncEntropyIf::~TEncEntropyIf();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncGOP.cpp:
71:     void TEncGOP::TEncGOP();
2652:   void TEncGOP::arrangeLongtermPicturesInRPS(TComSlice*, TComList<TComPic*>&);
337:    void TEncGOP::compressGOP(int, int, TComList<TComPic*>&, TComList<TComPicYuv*>&, std::list<AccessUnit, std::allocator<AccessUnit> >&, bool, bool);
114:    void TEncGOP::create();
2775:   void TEncGOP::dblMetric(TComPic*, unsigned int);
120:    void TEncGOP::destroy();
2533:   NalUnitType TEncGOP::getNalUnitType(int, int, bool);
124:    void TEncGOP::init(TEncTop*);
2035:   void TEncGOP::preLoopFilterPicAll(TComPic*, unsigned long long&, unsigned long long&);
1977:   void TEncGOP::printOutSummary(unsigned int, bool);
2634:   void TEncGOP::xAttachSliceDataToNalUnit(OutputNALUnit&, TComOutputBitstream*&);
2224:   void TEncGOP::xCalculateAddPSNR(TComPic*, TComPicYuv*, AccessUnit const&, double);
2384:   void TEncGOP::xCalculateInterlacedAddPSNR(TComPic*, TComPic*, TComPicYuv*, TComPicYuv*, AccessUnit const&, double);
2584:   Double TEncGOP::xCalculateRVM();
282:    void TEncGOP::xCreateLeadingSEIMessages(AccessUnit&, TComSPS*);
146:    SEIActiveParameterSets *TEncGOP::xCreateSEIActiveParameterSets(TComSPS*);
183:    SEIDisplayOrientation *TEncGOP::xCreateSEIDisplayOrientation();
158:    SEIFramePacking *TEncGOP::xCreateSEIFramePacking();
193:    SEIToneMappingInfo *TEncGOP::xCreateSEIToneMappingInfo();
2131:   UInt64 TEncGOP::xFindDistortionFrame(TComPicYuv*, TComPicYuv*);
2074:   void TEncGOP::xGetBuffer(TComList<TComPic*>&, TComList<TComPicYuv*>&, int, int, TComPic*&, TComPicYuv*&, int, bool);
2759:   Int TEncGOP::xGetFirstSeiLocation(AccessUnit&);
2057:   void TEncGOP::xInitGOP(int, int, TComList<TComPic*>&, TComList<TComPicYuv*>&, bool);
108:    void TEncGOP::~TEncGOP();
59:     Int getLSB(int, int);
2368:   void reinterlace(short*, short*, short*, unsigned int, unsigned int, unsigned int, bool);
        static void _GLOBAL__sub_I_TEncGOP.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncGOP.h:
142:    Int TEncGOP::getGOPSize();
181:    void TEncGOP::xResetNestedSEIPresentFlags();
175:    void TEncGOP::xResetNonNestedSEIPresentFlags();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncPic.cpp:
105:    void TEncPic::TEncPic();
128:    void TEncPic::create(int, int, unsigned int, unsigned int, unsigned int, unsigned int, Window&, Window&, int*, bool);
147:    void TEncPic::destroy();
113:    void TEncPic::~TEncPic();
58:     void TEncPicQPAdaptationLayer::TEncPicQPAdaptationLayer();
82:     void TEncPicQPAdaptationLayer::create(int, int, unsigned int, unsigned int);
94:     void TEncPicQPAdaptationLayer::destroy();
70:     void TEncPicQPAdaptationLayer::~TEncPicQPAdaptationLayer();
45:     void TEncQPAdaptationUnit::TEncQPAdaptationUnit();
52:     void TEncQPAdaptationUnit::~TEncQPAdaptationUnit();
        static void _GLOBAL__sub_I_TEncPic.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncPic.h:
109:    TEncPicQPAdaptationLayer *TEncPic::getAQLayer(unsigned int);
110:    UInt TEncPic::getMaxAQDepth();
84:     UInt TEncPicQPAdaptationLayer::getAQPartHeight();
87:     UInt TEncPicQPAdaptationLayer::getAQPartStride();
83:     UInt TEncPicQPAdaptationLayer::getAQPartWidth();
89:     Double TEncPicQPAdaptationLayer::getAvgActivity();
86:     UInt TEncPicQPAdaptationLayer::getNumAQPartInHeight();
85:     UInt TEncPicQPAdaptationLayer::getNumAQPartInWidth();
88:     TEncQPAdaptationUnit *TEncPicQPAdaptationLayer::getQPAdaptationUnit();
91:     void TEncPicQPAdaptationLayer::setAvgActivity(double);
62:     Double TEncQPAdaptationUnit::getActivity();
61:     void TEncQPAdaptationUnit::setActivity(double);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncPreanalyzer.cpp:
50:     void TEncPreanalyzer::TEncPreanalyzer();
64:     void TEncPreanalyzer::xPreanalyze(TEncPic*);
56:     void TEncPreanalyzer::~TEncPreanalyzer();
        static void _GLOBAL__sub_I_TEncPreanalyzer.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncRateCtrl.cpp:
285:    void TEncRCGOP::TEncRCGOP();
300:    void TEncRCGOP::create(TEncRCSeq*, int);
432:    void TEncRCGOP::destroy();
442:    void TEncRCGOP::updateAfterPicture(int);
386:    void TEncRCGOP::xCalEquaCoeff(TEncRCSeq*, double*, double*, double*, int);
448:    Int TEncRCGOP::xEstGOPTargetBits(TEncRCSeq*, int);
398:    Double TEncRCGOP::xSolveEqua(double, double*, double*, int);
295:    void TEncRCGOP::~TEncRCGOP();
464:    void TEncRCPic::TEncRCPic();
546:    void TEncRCPic::addToPictureLsit(std::list<TEncRCPic*, std::allocator<TEncRCPic*> >&);
970:    Double TEncRCPic::calAverageLambda();
943:    Double TEncRCPic::calAverageQP();
1083:   Double TEncRCPic::calculateLambdaIntra(double, double, double, double);
559:    void TEncRCPic::create(TEncRCSeq*, TEncRCGOP*, int, std::list<TEncRCPic*, std::allocator<TEncRCPic*> >&);
615:    void TEncRCPic::destroy();
627:    Double TEncRCPic::estimatePicLambda(std::list<TEncRCPic*, std::allocator<TEncRCPic*> >&, SliceType);
721:    Int TEncRCPic::estimatePicQP(double, std::list<TEncRCPic*, std::allocator<TEncRCPic*> >&);
804:    Double TEncRCPic::getLCUEstLambda(double);
1112:   Double TEncRCPic::getLCUEstLambdaAndQP(double, int, int*);
857:    Int TEncRCPic::getLCUEstQP(double, int);
1099:   void TEncRCPic::getLCUInitTargetBits();
759:    Double TEncRCPic::getLCUTargetBpp(SliceType);
1064:   Int TEncRCPic::getRefineBitsForIntra(int);
883:    void TEncRCPic::updateAfterLCU(int, int, int, double, bool);
997:    void TEncRCPic::updateAfterPicture(int, int, double, double, SliceType);
1088:   void TEncRCPic::updateAlphaBetaIntra(double*, double*);
522:    Int TEncRCPic::xEstPicHeaderBits(std::list<TEncRCPic*, std::allocator<TEncRCPic*> >&, int);
493:    Int TEncRCPic::xEstPicTargetBits(TEncRCSeq*, TEncRCGOP*);
488:    void TEncRCPic::~TEncRCPic();
45:     void TEncRCSeq::TEncRCSeq();
76:     void TEncRCSeq::create(int, int, int, int, int, int, int, int, int, bool, int);
162:    void TEncRCSeq::destroy();
193:    void TEncRCSeq::initBitsRatio(int*);
201:    void TEncRCSeq::initGOPID2Level(int*);
238:    void TEncRCSeq::initLCUPara(TRCParameter**);
209:    void TEncRCSeq::initPicPara(TRCParameter*);
273:    void TEncRCSeq::setAllBitRatio(double, double*, double*);
267:    void TEncRCSeq::updateAfterPic(int);
71:     void TEncRCSeq::~TEncRCSeq();
1153:   void TEncRateCtrl::TEncRateCtrl();
1165:   void TEncRateCtrl::destroy();
1388:   void TEncRateCtrl::destroyRCGOP();
1185:   void TEncRateCtrl::init(int, int, int, int, int, int, int, int, int, bool, GOPEntry*);
1382:   void TEncRateCtrl::initRCGOP(int);
1376:   void TEncRateCtrl::initRCPic(int);
1160:   void TEncRateCtrl::~TEncRateCtrl();
        static void _GLOBAL__sub_I_TEncRateCtrl.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncRateCtrl.h:
205:    Int TEncRCGOP::getBitsLeft();
202:    Int TEncRCGOP::getNumPic();
204:    Int TEncRCGOP::getPicLeft();
206:    Int TEncRCGOP::getTargetBitInGOP(int);
254:    Int TEncRCPic::getFrameLevel();
265:    TRCLCU &TEncRCPic::getLCU(int);
263:    Int TEncRCPic::getLCUCoded();
259:    Int TEncRCPic::getLCULeft();
266:    Int TEncRCPic::getPicActualHeaderBits();
273:    Double TEncRCPic::getPicActualLambda();
272:    Int TEncRCPic::getPicActualQP();
257:    Int TEncRCPic::getTargetBits();
275:    void TEncRCPic::setPicEstQP(int);
267:    void TEncRCPic::setTargetBits(int);
268:    void TEncRCPic::setTotalIntraCost(double);
149:    Int TEncRCSeq::getAdaptiveBits();
146:    Double TEncRCSeq::getAlphaUpdate();
147:    Double TEncRCSeq::getBetaUpdate();
131:    Int TEncRCSeq::getBitRatio(int);
143:    Int64 TEncRCSeq::getBitsLeft();
142:    Int TEncRCSeq::getFramesLeft();
133:    Int TEncRCSeq::getGOPID2Level(int);
117:    Int TEncRCSeq::getGOPSize();
121:    Int TEncRCSeq::getLCUHeight();
138:    TRCParameter *TEncRCSeq::getLCUPara(int);
139:    TRCParameter TEncRCSeq::getLCUPara(int, int);
120:    Int TEncRCSeq::getLCUWidth();
150:    Double TEncRCSeq::getLastLambda();
124:    Int TEncRCSeq::getLeftAverageBits();
127:    Int TEncRCSeq::getNumPixel();
129:    Int TEncRCSeq::getNumberOfLCU();
119:    Int TEncRCSeq::getPicHeight();
135:    TRCParameter TEncRCSeq::getPicPara(int);
118:    Int TEncRCSeq::getPicWidth();
128:    Int64 TEncRCSeq::getTargetBits();
114:    Int TEncRCSeq::getTotalFrames();
125:    Bool TEncRCSeq::getUseLCUSeparateModel();
140:    void TEncRCSeq::setLCUPara(int, int, TRCParameter);
151:    void TEncRCSeq::setLastLambda(double);
136:    void TEncRCSeq::setPicPara(int, TRCParameter);
323:    std::list<TEncRCPic*, std::allocator<TEncRCPic*> > &TEncRateCtrl::getPicList();
321:    TEncRCGOP *TEncRateCtrl::getRCGOP();
322:    TEncRCPic *TEncRateCtrl::getRCPic();
319:    Int TEncRateCtrl::getRCQP();
320:    TEncRCSeq *TEncRateCtrl::getRCSeq();
318:    void TEncRateCtrl::setRCQP(int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp:
251:    void TEncSampleAdaptiveOffset::SAOProcess(TComPic*, bool*, double const*, bool);
62:     void TEncSampleAdaptiveOffset::TEncSampleAdaptiveOffset();
289:    void TEncSampleAdaptiveOffset::addPreDBFStatistics(SAOStatData***);
79:     void TEncSampleAdaptiveOffset::createEncData(bool);
762:    void TEncSampleAdaptiveOffset::decideBlkParams(TComPic*, bool*, SAOStatData***, TComPicYuv*, TComPicYuv*, SAOBlkParam*, SAOBlkParam*);
354:    void TEncSampleAdaptiveOffset::decidePicParams(bool*, int);
706:    void TEncSampleAdaptiveOffset::deriveModeMergeRDO(int, std::vector<SAOBlkParam*, std::allocator<SAOBlkParam*> >&, bool*, SAOStatData***, SAOBlkParam&, double&, TEncSbac**, int);
569:    void TEncSampleAdaptiveOffset::deriveModeNewRDO(int, std::vector<SAOBlkParam*, std::allocator<SAOBlkParam*> >&, bool*, SAOStatData***, SAOBlkParam&, double&, TEncSbac**, int);
461:    void TEncSampleAdaptiveOffset::deriveOffsets(int, int, int, SAOStatData&, int*, int&);
190:    void TEncSampleAdaptiveOffset::destroyEncData();
427:    Int TEncSampleAdaptiveOffset::estIterOffset(int, int, double, int, long long, long long, int, int, long long&, double&, int);
421:    Int64 TEncSampleAdaptiveOffset::estSaoDist(long long, long long, long long, int);
864:    void TEncSampleAdaptiveOffset::getBlkStats(int, SAOStatData*, short*, short*, int, int, int, int, bool, bool, bool, bool, bool, bool, bool, bool, bool);
382:    Int64 TEncSampleAdaptiveOffset::getDistortion(int, int, int, int, int*, SAOStatData&);
284:    void TEncSampleAdaptiveOffset::getPreDBFStatistics(TComPic*);
305:    void TEncSampleAdaptiveOffset::getStatistics(SAOStatData***, TComPicYuv*, TComPicYuv*, TComPic*, bool);
239:    void TEncSampleAdaptiveOffset::initRDOCabacCoder(TEncSbac*, TComSlice*);
73:     void TEncSampleAdaptiveOffset::~TEncSampleAdaptiveOffset();
56:     Double xRoundIbdi(int, double);
51:     Double xRoundIbdi2(int, double);
        static void _GLOBAL__sub_I_TEncSampleAdaptiveOffset.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h:
71:     void SAOStatData::SAOStatData();
85:     const SAOStatData &SAOStatData::operator+=(SAOStatData const&);
73:     void SAOStatData::reset();
72:     void SAOStatData::~SAOStatData();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncSbac.cpp:
51:     void TEncSbac::TEncSbac();
503:    void TEncSbac::codeCUTransquantBypassFlag(TComDataCU*, unsigned int);
1044:   void TEncSbac::codeCoeffNxN(TComDataCU*, int*, unsigned int, unsigned int, unsigned int, unsigned int, TextType);
797:    void TEncSbac::codeDeltaQP(TComDataCU*, unsigned int);
870:    void TEncSbac::codeIPCMInfo(TComDataCU*, unsigned int);
694:    void TEncSbac::codeInterDir(TComDataCU*, unsigned int);
666:    void TEncSbac::codeIntraDirChroma(TComDataCU*, unsigned int);
611:    void TEncSbac::codeIntraDirLumaAng(TComDataCU*, unsigned int, bool);
985:    void TEncSbac::codeLastSignificantXY(unsigned int, unsigned int, int, int, TextType, unsigned int);
403:    void TEncSbac::codeMVPIdx(TComDataCU*, unsigned int, RefPicList);
534:    void TEncSbac::codeMergeFlag(TComDataCU*, unsigned int);
554:    void TEncSbac::codeMergeIndex(TComDataCU*, unsigned int);
743:    void TEncSbac::codeMvd(TComDataCU*, unsigned int, RefPicList);
250:    void TEncSbac::codePPS(TComPPS*);
411:    void TEncSbac::codePartSize(TComDataCU*, unsigned int, unsigned int);
496:    void TEncSbac::codePredMode(TComDataCU*, unsigned int);
821:    void TEncSbac::codeQtCbf(TComDataCU*, unsigned int, TextType, unsigned int);
958:    void TEncSbac::codeQtCbfZero(TComDataCU*, TextType, unsigned int);
942:    void TEncSbac::codeQtRootCbf(TComDataCU*, unsigned int);
967:    void TEncSbac::codeQtRootCbfZero(TComDataCU*);
710:    void TEncSbac::codeRefFrmIdx(TComDataCU*, unsigned int, RefPicList);
1659:   void TEncSbac::codeSAOBlkParam(SAOBlkParam&, bool*, bool, bool, bool);
1583:   void TEncSbac::codeSAOOffsetParam(int, SAOOffset&, bool);
1311:   void TEncSbac::codeSAOSign(unsigned int);
244:    void TEncSbac::codeSPS(TComSPS*);
1316:   void TEncSbac::codeSaoMaxUvlc(unsigned int, unsigned int);
1357:   void TEncSbac::codeSaoMerge(unsigned int);
1371:   void TEncSbac::codeSaoTypeIdx(unsigned int);
1349:   void TEncSbac::codeSaoUflc(unsigned int, unsigned int);
514:    void TEncSbac::codeSkipFlag(TComDataCU*, unsigned int);
273:    void TEncSbac::codeSliceFinish();
256:    void TEncSbac::codeSliceHeader(TComSlice*);
584:    void TEncSbac::codeSplitFlag(TComDataCU*, unsigned int, unsigned int);
268:    void TEncSbac::codeTerminatingBit(unsigned int);
262:    void TEncSbac::codeTilesWPPEntryPoint(TComSlice*);
839:    void TEncSbac::codeTransformSkipFlags(TComDataCU*, unsigned int, unsigned int, unsigned int, TextType);
599:    void TEncSbac::codeTransformSubdivFlag(unsigned int, unsigned int);
238:    void TEncSbac::codeVPS(TComVPS*);
146:    void TEncSbac::determineCabacInitIdx();
1389:   void TEncSbac::estBit(estBitsSbacStruct*, int, int, TextType);
1408:   void TEncSbac::estCBFBit(estBitsSbacStruct*);
1434:   void TEncSbac::estSignificantCoeffGroupMapBit(estBitsSbacStruct*, TextType);
1530:   void TEncSbac::estSignificantCoefficientsBit(estBitsSbacStruct*, TextType);
1454:   void TEncSbac::estSignificantMapBit(estBitsSbacStruct*, int, int, TextType);
374:    void TEncSbac::load(TEncSbac*);
1578:   void TEncSbac::loadContexts(TEncSbac*);
379:    void TEncSbac::loadIntraDirModeLuma(TEncSbac*);
96:     void TEncSbac::resetEntropy();
387:    void TEncSbac::store(TEncSbac*);
204:    void TEncSbac::updateContextTables(SliceType, int, bool);
1573:   void TEncSbac::xCopyContextsFrom(TEncSbac*);
393:    void TEncSbac::xCopyFrom(TEncSbac*);
350:    void TEncSbac::xWriteCoefRemainExGolomb(unsigned int, unsigned int&);
323:    void TEncSbac::xWriteEpExGolomb(unsigned int, unsigned int);
295:    void TEncSbac::xWriteUnaryMaxSymbol(unsigned int, ContextModel*, int, unsigned int);
278:    void TEncSbac::xWriteUnarySymbol(unsigned int, ContextModel*, int);
88:     void TEncSbac::~TEncSbac();
        static void _GLOBAL__sub_I_TEncSbac.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncSbac.h:
123:    void TEncSbac::codeDFFlag(unsigned int, char const*);
124:    void TEncSbac::codeDFSvlc(int, char const*);
104:    void TEncSbac::codeScalingList(TComScalingList*);
82:     UInt TEncSbac::getCoeffCost();
177:    TEncBinIf *TEncSbac::getEncBinIf();
89:     UInt TEncSbac::getNumberOfWrittenBits();
72:     void TEncSbac::init(TEncBinIf*);
88:     void TEncSbac::resetBits();
81:     void TEncSbac::resetCoeffCost();
78:     void TEncSbac::setBitstream(TComBitIf*);
79:     void TEncSbac::setSlice(TComSlice*);
175:    void TEncSbac::updateContextTables(SliceType, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncSearch.cpp:
2869:   void TEncSearch::IPCMSearch(TComDataCU*, TComYuv*, TComYuv*&, TComYuv*&, TComYuv*&);
80:     void TEncSearch::TEncSearch();
4348:   void TEncSearch::encodeResAndCalcRdInterCU(TComDataCU*, TComYuv*, TComYuv*, TComYuv*&, TComYuv*&, TComYuv*&, bool);
2712:   void TEncSearch::estIntraPredChromaQT(TComDataCU*, TComYuv*, TComYuv*, TComYuv*, TComYuv*, unsigned int);
2388:   void TEncSearch::estIntraPredQT(TComDataCU*, TComYuv*, TComYuv*, TComYuv*, TComYuv*, unsigned int&, bool);
178:    void TEncSearch::init(TEncCfg*, TComTrQuant*, int, int, int, int, TEncEntropy*, TComRdCost*, TEncSbac***, TEncSbac*);
3056:   void TEncSearch::predInterSearch(TComDataCU*, TComYuv*, TComYuv*&, TComYuv*&, TComYuv*&, bool, bool);
2341:   void TEncSearch::preestChromaPredMode(TComDataCU*, TComYuv*, TComYuv*);
5745:   void TEncSearch::setWpScalingDistParam(TComDataCU*, int, RefPicList);
5505:   void TEncSearch::xAddSymbolBitsInter(TComDataCU*, unsigned int, unsigned int, unsigned int&, TComYuv*&, TComYuv*, TComYuv*&);
3847:   void TEncSearch::xCheckBestMVP(TComDataCU*, RefPicList, TComMv, TComMv&, int&, unsigned int&, unsigned int&);
3838:   void TEncSearch::xCopyAMVPInfo(_AMVPInfo*, _AMVPInfo*);
832:    void TEncSearch::xEncCoeffQT(TComDataCU*, unsigned int, unsigned int, TextType, bool);
886:    void TEncSearch::xEncIntraHeader(TComDataCU*, unsigned int, unsigned int, bool, bool);
2789:   void TEncSearch::xEncPCM(TComDataCU*, unsigned int, short*, short*, short*, short*, short*, unsigned int, unsigned int, unsigned int, TextType);
763:    void TEncSearch::xEncSubdivCbfQT(TComDataCU*, unsigned int, unsigned int, bool, bool);
5287:   void TEncSearch::xEncodeResidualQT(TComDataCU*, unsigned int, unsigned int, bool, TextType);
3677:   void TEncSearch::xEstimateMvPredAMVP(TComDataCU*, TComYuv*, unsigned int, RefPicList, int, TComMv&, bool, unsigned int*);
4550:   void TEncSearch::xEstimateResidualQT(TComDataCU*, unsigned int, unsigned int, unsigned int, TComYuv*, unsigned int, double&, unsigned int&, unsigned int&, unsigned int*);
5544:   void TEncSearch::xExtDIFUpSamplingH(TComPattern*, bool);
5585:   void TEncSearch::xExtDIFUpSamplingQ(TComPattern*, TComMv, bool);
3789:   void TEncSearch::xGetBlkBits(PartSize, bool, int, unsigned int, unsigned int*);
2937:   void TEncSearch::xGetInterPredictionError(TComDataCU*, TComYuv*, int, unsigned int&, bool);
956:    UInt TEncSearch::xGetIntraBitsQT(TComDataCU*, unsigned int, unsigned int, bool, bool, bool);
981:    UInt TEncSearch::xGetIntraBitsQTChroma(TComDataCU*, unsigned int, unsigned int, unsigned int, bool);
3761:   UInt TEncSearch::xGetMvpIdxBits(int, int);
3892:   UInt TEncSearch::xGetTemplateCost(TComDataCU*, unsigned int, unsigned int, TComYuv*, TComYuv*, TComMv, int, int, RefPicList, int, int, int);
1163:   void TEncSearch::xIntraCodingChromaBlk(TComDataCU*, unsigned int, unsigned int, TComYuv*, TComYuv*, TComYuv*, unsigned int&, unsigned int, int);
1002:   void TEncSearch::xIntraCodingLumaBlk(TComDataCU*, unsigned int, unsigned int, TComYuv*, TComYuv*, TComYuv*, unsigned int&, int);
2027:   void TEncSearch::xLoadIntraResultChromaQT(TComDataCU*, unsigned int, unsigned int, unsigned int);
1849:   void TEncSearch::xLoadIntraResultQT(TComDataCU*, unsigned int, unsigned int, bool);
2970:   void TEncSearch::xMergeEstimation(TComDataCU*, TComYuv*, int, unsigned int&, TComMvField*, unsigned int&, unsigned int&, TComMvField*, unsigned char*, int&);
5460:   UInt TEncSearch::xModeBitsIntra(TComDataCU*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
3947:   void TEncSearch::xMotionEstimation(TComDataCU*, TComYuv*, int, RefPicList, TComMv*, int, TComMv&, unsigned int&, unsigned int&, bool);
710:    UInt TEncSearch::xPatternRefinement(TComPattern*, TComMv, int, TComMv&);
4048:   void TEncSearch::xPatternSearch(TComPattern*, short*, int, TComMv*, TComMv*, TComMv&, unsigned int&);
4107:   void TEncSearch::xPatternSearchFast(TComDataCU*, TComPattern*, short*, int, TComMv*, TComMv*, TComMv&, unsigned int&);
4298:   void TEncSearch::xPatternSearchFracDIF(TComDataCU*, TComPattern*, short*, int, TComMv*, TComMv&, TComMv&, unsigned int&, bool);
2129:   void TEncSearch::xRecurIntraChromaCodingQT(TComDataCU*, unsigned int, unsigned int, TComYuv*, TComYuv*, TComYuv*, unsigned int&);
1360:   void TEncSearch::xRecurIntraCodingQT(TComDataCU*, unsigned int, unsigned int, bool, TComYuv*, TComYuv*, TComYuv*, unsigned int&, unsigned int&, bool, double&);
3031:   void TEncSearch::xRestrictBipredMergeCand(TComDataCU*, unsigned int, TComMvField*, unsigned char*, int);
2279:   void TEncSearch::xSetIntraResultChromaQT(TComDataCU*, unsigned int, unsigned int, TComYuv*);
1712:   void TEncSearch::xSetIntraResultQT(TComDataCU*, unsigned int, unsigned int, bool, TComYuv*);
5384:   void TEncSearch::xSetResidualQTData(TComDataCU*, unsigned int, unsigned int, unsigned int, TComYuv*, unsigned int, bool);
4030:   void TEncSearch::xSetSearchRange(TComDataCU*, TComMv&, int, TComMv&, TComMv&);
1963:   void TEncSearch::xStoreIntraResultChromaQT(TComDataCU*, unsigned int, unsigned int, unsigned int);
1785:   void TEncSearch::xStoreIntraResultQT(TComDataCU*, unsigned int, unsigned int, bool);
350:    void TEncSearch::xTZ2PointSearch(TComPattern*, TEncSearch::IntTZSearchStruct&, TComMv*, TComMv*);
535:    void TEncSearch::xTZ8PointDiamondSearch(TComPattern*, TEncSearch::IntTZSearchStruct&, TComMv*, TComMv*, int, int, int);
4124:   void TEncSearch::xTZSearch(TComDataCU*, TComPattern*, short*, int, TComMv*, TComMv*, TComMv&, unsigned int&);
310:    void TEncSearch::xTZSearchHelp(TComPattern*, TEncSearch::IntTZSearchStruct&, int, int, unsigned char, unsigned int);
5473:   UInt TEncSearch::xUpdateCandList(unsigned int, double, unsigned int, unsigned int*, double*);
117:    void TEncSearch::~TEncSearch();
        static void _GLOBAL__sub_I_TEncSearch.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncSearch.h:
210:    void TEncSearch::setAdaptiveSearchRange(int, int, int);
465:    void TEncSearch::setDistParamComp(unsigned int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncSlice.cpp:
49:     void TEncSlice::TEncSlice();
701:    void TEncSlice::calCostSliceI(TComPic*&);
735:    void TEncSlice::compressSlice(TComPic*&);
81:     void TEncSlice::create(int, int, unsigned int, unsigned int, unsigned char);
98:     void TEncSlice::destroy();
1097:   void TEncSlice::encodeSlice(TComPic*&, TComOutputBitstream*);
135:    void TEncSlice::init(TEncTop*);
71:     void TEncSlice::initCtxMem(unsigned int);
179:    void TEncSlice::initEncSlice(TComPic*, int, int, int, int, TComSlice*&, TComSPS*, TComPPS*, bool);
576:    void TEncSlice::precompressSlice(TComPic*&);
507:    void TEncSlice::resetQP(TComPic*, int, double);
549:    void TEncSlice::setSearchRange(TComSlice*);
1370:   void TEncSlice::xDetermineStartAndBoundingCUAddr(unsigned int&, unsigned int&, TComPic*&, bool);
1693:   Double TEncSlice::xGetQPValueAccordingToLambda(double);
63:     void TEncSlice::~TEncSlice();
        static void _GLOBAL__sub_I_TEncSlice.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncSlice.h:
129:    UInt TEncSlice::getSliceIdx();
132:    void TEncSlice::setCtxMem(TEncSbac*, int);
130:    void TEncSlice::setSliceIdx(unsigned int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncTop.cpp:
1084:   void TEncCfg::xCheckGSParameters();
52:     void TEncTop::TEncTop();
89:     void TEncTop::create();
155:    void TEncTop::createWPPCoders(int);
308:    void TEncTop::deletePicBuffer();
198:    void TEncTop::destroy();
334:    void TEncTop::encode(bool, TComPicYuv*, TComList<TComPicYuv*>&, std::list<AccessUnit, std::allocator<AccessUnit> >&, int&);
396:    void TEncTop::encode(bool, TComPicYuv*, TComList<TComPicYuv*>&, std::list<AccessUnit, std::allocator<AccessUnit> >&, int&, bool);
1035:   Int TEncTop::getReferencePictureSetIdxForSOP(TComSlice*, int, int);
265:    void TEncTop::init(bool);
1000:   void TEncTop::selectReferencePictureSet(TComSlice*, int, int);
530:    void TEncTop::xGetNewPicBuffer(TComPic*&);
708:    void TEncTop::xInitPPS();
1065:   void TEncTop::xInitPPSforTiles();
807:    void TEncTop::xInitRPS(bool);
575:    void TEncTop::xInitSPS();
82:     void TEncTop::~TEncTop();
377:    void separateFields(short*, short*, unsigned int, unsigned int, unsigned int, bool);
        static void _GLOBAL__sub_I_TEncTop.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/TEncTop.h:
159:    TEncBinCABAC *TEncTop::getBinCABAC();
163:    TComBitCounter *TEncTop::getBitCounter();
167:    TComBitCounter *TEncTop::getBitCounters();
157:    TEncCavlc *TEncTop::getCavlcCoder();
155:    TEncCu *TEncTop::getCuEncoder();
156:    TEncEntropy *TEncTop::getEntropyCoder();
153:    TEncGOP *TEncTop::getGOPEncoder();
147:    TComList<TComPic*> *TEncTop::getListPic();
151:    TComLoopFilter *TEncTop::getLoopFilter();
173:    TComPPS *TEncTop::getPPS();
148:    TEncSearch *TEncTop::getPredSearch();
166:    TEncSbac *TEncTop::getRDGoOnSbacCoder();
165:    TEncSbac ***TEncTop::getRDSbacCoder();
169:    TEncSbac ****TEncTop::getRDSbacCoders();
171:    TEncRateCtrl *TEncTop::getRateCtrl();
164:    TComRdCost *TEncTop::getRdCost();
152:    TEncSampleAdaptiveOffset *TEncTop::getSAO();
172:    TComSPS *TEncTop::getSPS();
158:    TEncSbac *TEncTop::getSbacCoder();
160:    TEncSbac *TEncTop::getSbacCoders();
176:    TComScalingList *TEncTop::getScalingList();
154:    TEncSlice *TEncTop::getSliceEncoder();
150:    TComTrQuant *TEncTop::getTrQuant();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/TLibEncoder/WeightPredAnalysis.cpp:
47:     void WeightPredAnalysis::WeightPredAnalysis();
71:     Bool WeightPredAnalysis::xCalcACDCParamSlice(TComSlice*);
433:    Int64 WeightPredAnalysis::xCalcACValue(short*, int, int, int, long long);
353:    Int64 WeightPredAnalysis::xCalcACValueSlice(TComSlice*, short*, long long);
391:    Int64 WeightPredAnalysis::xCalcACValueUVSlice(TComSlice*, short*, long long);
410:    Int64 WeightPredAnalysis::xCalcDCValue(short*, int, int, int);
333:    Int64 WeightPredAnalysis::xCalcDCValueSlice(TComSlice*, short*, int*);
371:    Int64 WeightPredAnalysis::xCalcDCValueUVSlice(TComSlice*, short*, int*);
460:    Int64 WeightPredAnalysis::xCalcSADvalueWP(int, short*, short*, int, int, int, int, int, int, int);
135:    void WeightPredAnalysis::xCheckWPEnable(TComSlice*);
176:    Bool WeightPredAnalysis::xEstimateWPParamSlice(TComSlice*);
125:    void WeightPredAnalysis::xRestoreWPparam(TComSlice*);
272:    Bool WeightPredAnalysis::xSelectWP(TComSlice*, wpScalingParam (*) [16][3], int);
115:    void WeightPredAnalysis::xStoreWPparam(bool, bool);
207:    Bool WeightPredAnalysis::xUpdatingWPParameters(TComSlice*, wpScalingParam (*) [16][3], int);
        static void _GLOBAL__sub_I_WeightPredAnalysis.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibEncoder/../../../../source/Lib/libmd5/MD5.h:
78:     const char *digestToString(unsigned char const (*) [16], int);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibVideoIO/../../../../source/Lib/TLibCommon/CommonDef.h:
134:    short Clip3<short>(short, short, short);

File /mnt/f/EI_For_Compare/build/linux/lib/TLibVideoIO/../../../../source/Lib/TLibCommon/TComPicYuv.h:
115:    Int TComPicYuv::getCStride();
131:    Pel *TComPicYuv::getCbAddr();
132:    Pel *TComPicYuv::getCrAddr();
112:    Int TComPicYuv::getHeight();
130:    Pel *TComPicYuv::getLumaAddr();
114:    Int TComPicYuv::getStride();
111:    Int TComPicYuv::getWidth();

File /mnt/f/EI_For_Compare/build/linux/lib/TLibVideoIO/../../../../source/Lib/TLibVideoIO/TVideoIOYuv.cpp:
185:    void TVideoIOYuv::close();
190:    Bool TVideoIOYuv::isEof();
195:    Bool TVideoIOYuv::isFail();
154:    void TVideoIOYuv::open(char*, bool, int, int, int, int);
394:    Bool TVideoIOYuv::read(TComPicYuv*, int*);
206:    void TVideoIOYuv::skipFrames(unsigned int, unsigned int, unsigned int);
558:    Bool TVideoIOYuv::write(TComPicYuv*, TComPicYuv*, int, int, int, int, bool);
462:    Bool TVideoIOYuv::write(TComPicYuv*, int, int, int, int);
        static void _GLOBAL__sub_I_TVideoIOYuv.cpp(void);
        static void __static_initialization_and_destruction_0(int, int);
62:     static void invScalePlane(Pel*, UInt, UInt, UInt, UInt, Pel, Pel);
245:    static Bool readPlane(Pel*, std::istream&, Bool, UInt, UInt, UInt, UInt, UInt);
114:    static void scalePlane(Pel*, UInt, UInt, UInt, Int, Pel, Pel);
86:     static void scalePlane(Pel*, UInt, UInt, UInt, UInt);
341:    static Bool writeField(std::ostream&, Pel*, Pel*, Bool, UInt, UInt, UInt, bool);
305:    static Bool writePlane(std::ostream&, Pel*, Bool, UInt, UInt, UInt);